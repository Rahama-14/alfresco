<project name="enterprise" default="build">

   <path id="path.common" path="${basedir}/../../common"/>
   <property name="dir.common" refid="path.common"/>
   <!-- explicitly load the web client properties file so we can add to the list of required faces config files -->
   <property file="${dir.common}/../projects/web-client/project.properties" />
   <import file="${dir.common}/common.xml"/>

   <target name="init" depends="common-init.init">
      <path id="classpath.unit.test.enterprise">
         <pathelement location="${basedir}/${dir.name.config}"/>
         <path refid="classpath.unit.test"/>
      </path>
   </target>

   <!-- we want to build a WAR file in this project and then -->
   <!-- copy the built WAR over the web client project version -->
   <target name="package" depends="package-war" />   
   
   <!-- copy the template web.xml and replace the "@facesconfig@" token with list of faces config files -->
   <target name="generate-web-xml" depends="init">
      <copy file="${dir.project.webclient}/source/web/WEB-INF/${file.name.war.template}" 
            tofile="${dir.src.webinf}/web.xml" overwrite="yes" />
      <replace file="${dir.src.webinf}/web.xml" token="@facesconfig@" value="${files.faces.config.enterprise}" />
   </target>

   <!-- override the common assemble-war target -->
   <target name="assemble-war" depends="obfuscate, generate-web-xml">
      <fail unless="server" message="You must supply a value for the 'server' property to indicate which WAR to build" />
            
      <condition property="isTomcat">
         <equals arg1="${server}" arg2="tomcat" casesensitive="false" trim="yes"/>
      </condition>
      <condition property="isJBoss">
         <equals arg1="${server}" arg2="jboss" casesensitive="false" trim="yes"/>
      </condition>
      
      <!-- copy all the files from the web-client project to ours -->
      <copy todir="${dir.assemble}">
         <fileset dir="${dir.project.webclient}/build/assemble" />
      </copy>
      
      <!-- include the enterprise.jar (maybe obfuscated) -->
      <copy todir="${dir.assemble}/WEB-INF/lib">
         <fileset dir="${dir.dist}" includes="${file.name.jar}" />
      </copy>
      
      <!-- overlay the additional web source files -->
      <copy todir="${dir.assemble}" overwrite="yes">
         <fileset dir="${dir.src.web}" excludes="WEB-INF/web.xml" />
      </copy>
      
      <antcall target="assemble-war-tomcat" />
      <antcall target="assemble-war-jboss" />
   </target>

   <target name="assemble-war-tomcat" if="isTomcat">
      <copy todir="${dir.assemble}/WEB-INF/classes" overwrite="yes">
         <fileset dir="${dir.config}"/>
      </copy>
   </target>
   
   <target name="assemble-war-jboss" if="isJBoss">
      <!-- push enterprise config files into conf directory -->
      <copy todir="${dir.deploy.jboss}/../conf" overwrite="yes">
         <fileset dir="${dir.config}"/>
      </copy>
   </target>
   
   <!-- obfuscate enterprise release build -->
   <target name="obfuscate" depends="package-jar" if="build.release">
      <taskdef name="obfuscate" classname="com.yworks.yguard.ObfuscatorTask" classpath="${dir.common.lib}/yguard.jar" />
      
      <obfuscate mainclass="${mainclass}" replaceclassnamestrings="true">
         <property name="error-checking" value="pedantic" />
         <property name="language-conformity" value="illegal" />
         <inoutpair in="${dir.dist}/${file.name.jar}" out="${dir.dist}/${file.name.jar}" />
         <externalclasses>
            <path refid="classpath.compile" />
         </externalclasses>
         <expose>
            <class classes="public" 
                   methods="protected" 
                   fields="public">
               <patternset>
                  <include name="**.*" />
                  <exclude name="org.alfresco.repo.security.permissions.impl.hibernate.*Impl"/>
               </patternset>
            </class>
            <class classes="public" 
                   methods="private" 
                   fields="public">
               <patternset>
                  <include name="org.alfresco.repo.security.permissions.impl.hibernate.*Impl"/>
               </patternset>
            </class>
            <attribute name="Deprecated" />
          </expose>
      </obfuscate>
   </target>
   
   <target name="run-tests" depends="package-jar" description="Runs the enterprise project unit tests">
      <mkdir dir="${dir.test.results}" />
      <junit printsummary="yes" fork="yes" haltonfailure="yes" dir="${basedir}">
         <classpath refid="classpath.unit.test.enterprise" />
         <formatter type="xml" />
         <batchtest todir="${dir.test.results}">
            <fileset dir="${dir.src.java}">
               <include name="**/*Test.java" />
               <exclude name="**/Base*Test.java" />
               <exclude name="**/Abstract*Test.java" />
               <exclude name="**/*SystemTest.java" />
            </fileset>
         </batchtest>
      </junit>
   </target>
   
   <target name="clean" depends="common.clean" description="Cleans all the normal files plus web.xml">
      <delete file="${dir.src.webinf}/web.xml" />
   </target>

</project>
