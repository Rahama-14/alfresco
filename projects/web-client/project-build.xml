<project name="web-client" default="build">

   <path id="path.common" path="${basedir}/../.."/>
   <property name="dir.common" refid="path.common"/>
   <import file="${dir.common}/common.xml"/>

   <!-- we want to build a WAR file in this project -->
   <target name="package" depends="package-war" />

   <target name="package-war" depends="package-jar" description="Packages the WAR file for the current server">
      <fail unless="server" message="You must supply a value for the 'server' property to indicate which WAR to build" />  
      <package-specific-war for="${server}" />
   </target>
   
   <!-- define macro to build the war and use different exclude lists for -->
   <!-- different appservers -->
   <macrodef name="package-specific-war">
      <attribute name="for" />
      <sequential>
         <echo level="info">Building WAR file for @{for}</echo>
         <mkdir dir="${dir.dist}" />
         <war warfile="${dir.dist}/${file.name.war}" webxml="${dir.src.webinf}\web.xml">
            <fileset dir="${dir.src.web}" excludes="WEB-INF/**" />
            <webinf dir="${dir.project.installer}" includes="licenses/**"/>
            <webinf dir="${dir.src.webinf}" includes="${webinf.includes}" excludes="${webinf.excludes.@{for}}"/>   
            <lib dir="${dir.common.lib}" includes="${webinf.lib.includes}" excludes="${webinf.lib.excludes.@{for}}" />
            <lib dir="${dir.common.lib}/jibx" includes="*.jar" />
            <lib dir="${dir.common.lib}/openoffice" includes="*.jar" />
            <lib dir="${dir.common.lib}/jmagick" includes="*.jar" />
            <lib dir="${dir.common.lib}/commons" includes="*.jar" />
            <lib dir="${dir.common.lib}/jgroups" includes="*.jar" />
            <lib dir="${dir.common.lib}/treecache" includes="*.jar" />
            <lib dir="${dir.common.lib}/swarmcache" includes="*.jar" />
            <lib dir="${dir.dist}" includes="${file.name.jar}" />
            <lib dir="${dir.project.core}/build/dist" includes="${dir.name.core}.jar" />
            <lib dir="${dir.project.repository}/build/dist" includes="${dir.name.repository}.jar" />
            <lib dir="${dir.project.remoteapi}/build/dist" includes="${dir.name.remoteapi}.jar" />
            <webinf dir="${dir.project.remoteapi}/source/web/WEB-INF"/>
            <zipfileset dir="${dir.project.remoteapi}/source/wsdl" prefix="wsdl"/>
         </war>
      </sequential>
   </macrodef>
  
</project>
