<project name="common">

    <!-- ****************************************** -->
    <!-- ** Initialisation/Configuration targets ** -->
    <!-- ****************************************** -->

    <property name="dir.common" value="${basedir}" />
    <import file="${dir.common}/common-init.xml" />

    <!-- *********************** -->
    <!-- ** Composite targets ** -->
    <!-- *********************** -->

    <target name="build" depends="clean, package" description="Builds the project after cleaning" />

    <target name="incremental" depends="package" description="Incrementally builds the project" />

    <!-- ************************* -->
    <!-- ** Compilation targets ** -->
    <!-- ************************* -->

    <target name="compile-java" depends="init" description="Compiles the Java source code">
        <mkdir dir="${dir.classes}" />
        <javac destdir="${dir.classes}" fork="true" deprecation="on" debug="on" target="1.5" source="1.5">
            <src path="${dir.src.java}" />
            <classpath refid="classpath.compile" />
        </javac>

        <copy todir="${dir.classes}">
            <fileset dir="${dir.src.java}">
                <patternset>
                    <exclude name="**/*.java" />
                </patternset>
            </fileset>
        </copy>
    </target>

    <target name="compile-javadocs" depends="init" description="Creates the JavaDocs for the project">
        <mkdir dir="${dir.javadoc}" />
        <javadoc sourcepath="${dir.src.java}" destdir="${dir.javadoc}" packagenames="${javadoc.packages.include}" 
                 excludepackagenames="${javadoc.packages.exclude}" author="true" version="true" doctitle="${javadoc.title.document}" 
                 windowtitle="${javadoc.title.window}" classpathref="classpath.compile" bottom="${javadoc.copyright}"/>
    </target>

    <target name="compile-taglibdocs" depends="init" description="Creates the tag library docs for the project">
        <mkdir dir="${dir.taglibdoc}" />
        <java fork="true" jar="${dir.common.lib}/tlddoc.jar" failonerror="true">
            <arg line="-d ${dir.taglibdoc}" />
            <arg line="-doctitle '${taglibdoc.title.document}'" />
            <arg line="-windowtitle '${taglibdoc.title.window}'" />
            <arg value="${dir.src.webinf}/*.tld" />
        </java>
    </target>

    <target name="run-tests" depends="package-jar" description="Runs the projects unit tests">
        <mkdir dir="${dir.test.results}" />
        <junit printsummary="yes" fork="yes" haltonfailure="yes" dir="${basedir}">
            <classpath refid="classpath.unit.test" />
            <formatter type="xml" />
            <batchtest todir="${dir.test.results}">
                <fileset dir="${dir.src.java}">
                    <include name="**/*Test.java" />
                    <exclude name="**/Base*Test.java" />
                    <exclude name="**/Abstract*Test.java" />
                    <exclude name="**/*SystemTest.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="run-test" depends="package-jar" description="Runs a single test defined in the testcase property i.e. call this target with -Dtestcase=[test]">
        <mkdir dir="${dir.test.results}" />
        <junit printsummary="yes" fork="yes" haltonfailure="yes" dir="${basedir}">
            <classpath refid="classpath.unit.test" />
            <formatter type="xml" />
            <test name="${testcase}" todir="${dir.test.results}" />
        </junit>
    </target>

    <!-- *********************** -->
    <!-- ** Packaging targets ** -->
    <!-- *********************** -->

    <!-- we provide the package target so projects can override to build what they need -->
    <target name="package" depends="package-jar" description="Packages the archive files" />

    <target name="package-jar" depends="compile-java" description="Packages the JAR file">
        <mkdir dir="${dir.dist}" />
        <jar jarfile="${dir.dist}/${file.name.jar}" basedir="${dir.classes}" />
    </target>

    <target name="package-war" depends="package-jar" description="Packages the WAR file">
        <mkdir dir="${dir.dist}" />
        <war warfile="${dir.dist}/${file.name.war}" webxml="${dir.src.webinf}/web.xml">
            <fileset dir="${dir.src.web}" excludes="WEB-INF/**" />
            <webinf dir="${dir.src.webinf}" includes="${webinf.includes}" excludes="${webinf.excludes}" />
            <lib dir="${dir.common.lib}" includes="${webinf.lib.includes}" excludes="${webinf.lib.excludes}" />
            <lib dir="${dir.dist}" includes="${file.name.jar}" />
        </war>
    </target>

    <target name="assemble-ear" depends="package-war">
        <copy todir="${dir.assemble}">
            <fileset dir="${dir.dist}" includes="*.war" />
        </copy>
    </target>

    <target name="package-ear" depends="assemble-ear" description="Packages the EAR file">
        <mkdir dir="${dir.assemble}" />
        <ear earfile="${dir.dist}/${file.name.ear}" appxml="${dir.src.metainf}/application.xml">
            <fileset dir="${dir.assemble}" />
        </ear>
    </target>

    <!-- ********************** -->
    <!-- ** Cleaning targets ** -->
    <!-- ********************** -->

    <target name="clean" depends="init" description="Cleans the project">
        <delete includeEmptyDirs="true" quiet="yes" dir="${dir.classes}" />
        <delete includeEmptyDirs="true" quiet="yes" dir="${dir.dist}" />
        <delete includeEmptyDirs="true" quiet="yes" dir="${dir.assemble}" />
        <delete includeEmptyDirs="true" quiet="yes" dir="${dir.test.results}" />
        <delete includeEmptyDirs="true" quiet="yes" dir="${dir.docs}" />
    </target>

</project>

