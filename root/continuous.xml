<project name="continuous" 
         default="continuous" >

   <!-- ********************************** -->
   <!-- ** Initialisation/Configuration ** -->
   <!-- ********************************** -->

   <import file="build.xml" />

   <target name="init" 
           depends="alfresco.init">
      <property file="continuous.properties"/>
   </target>

   <target name="init-test" 
           depends="init">
      <mkdir dir="${dir.continuous.dist}" />
   </target>

   <!-- ********************** -->
   <!-- ** Cleaning targets ** -->
   <!-- ********************** -->

   <target name="clean-continuous" 
           description="Cleans just the continuous build area" 
           depends="init">
      <delete quiet="yes" 
              includeEmptyDirs="true" 
              dir="${dir.continuous.build}" />
   </target>

   <!-- *********************** -->
   <!-- ** Top level targets ** -->
   <!-- *********************** -->

   <target name="continuous" 
           description="Performs a full clean, runs all tests and creates all distribution files"
           depends="clean-continuous, 
                    clean, 
                    -reset-database, 
                    init-test, 
                    test, 
                    distribute" />

   <target name="continuous-without-tests" 
           description="Performs a full clean and creates all distribution files"
           depends="clean-continuous, 
                    clean, 
                    -reset-database, 
                    distribute" />

   <target name="distribute" 
           description="Creates the distribution files for all platforms"
           depends="set-build-number, 
                    incremental, 
                    distribute-tomcat, 
                    distribute-war, 
                    distribute-wcm, 
                    distribute-sdk, 
                    distribute-webserviceclient, 
                    distribute-benchmark, 
                    distribute-mmt" />

   <target name="set-build-number" 
           depends="init" 
           if="build.number">
      <exec executable="svn">
         <arg line="revert ${dir.project.repository.config}/alfresco/version.properties"/>
      </exec>
      <replace file="${dir.project.repository.config}/alfresco/version.properties" 
               token="@build-number@" 
               value="${build.number}" />
   </target>

   <target name="set-build-number-cc" 
           depends="init" 
           if="build.release">
      <replace file="${dir.project.repository.config}/alfresco/version.properties" 
               token="@build-number@" 
               value="${label}" />
   </target>

   <target name="generate-checksums" 
           description="Generates checksum files for the distibution files" 
           depends="init">
      <delete>
         <fileset dir="${dir.continuous.dist}" 
                  includes="*.MD5"/>
      </delete>
      <checksum>
         <fileset dir="${dir.continuous.dist}"/>
      </checksum>
   </target>

   <!-- **************************************************** -->
   <!-- ** Database targets (for internal script use only)** -->
   <!-- **************************************************** -->
 
  <target name="reset-database" 
          depends="-drop-database, 
                   -create-database" />
   <target name="-reset-database" 
           depends="-drop-database, 
                    -create-database" />

   <target name="-create-database" 
           depends="init">
      <property file="${dir.project.repository.config}/alfresco/repository.properties"/>
      <sql driver="${db.driver}" 
           url="jdbc:mysql:///" 
           classpathref="classpath.compile" 
           print="yes"
           userid="${db.username}" 
           password="${db.password}">
         create database ${db.name};
      </sql>
   </target>

   <target name="-drop-database" 
           depends="init">
      <property file="${dir.project.repository.config}/alfresco/repository.properties"/>
      <sql driver="${db.driver}" 
           url="${db.url}" 
           classpathref="classpath.compile" 
           print="yes"
           userid="${db.username}" 
           password="${db.password}">
         drop database ${db.name};
      </sql>

      <delete verbose="true">
         <fileset dir="${basedir}" 
                  includes="**/alfresco.log" />
      </delete>
      <delete dir="${dir.test.alfdata}" 
              quiet="yes" 
              includeEmptyDirs="true" />
      <delete dir="${dir.project.repository}/alf_data" 
              quiet="yes" 
              includeEmptyDirs="true"  />
      <delete dir="${dir.project.remoteapi}/alf_data" 
              quiet="yes" 
              includeEmptyDirs="true" />
   </target>

   <!-- ***************** -->
   <!-- ** WCM targets ** -->
   <!-- ***************** -->

   <target name="distribute-wcm" 
           description="Creates the distibution files for WCM"
           depends="distribute-wcm-windows, 
                    distribute-wcm-linux" />

   <target name="distribute-wcm-windows" 
           depends="assemble-virtual">
      <zip destfile="${dir.continuous.dist}/${file.name.dist.wcm}.zip">
         <zipfileset dir="${dir.continuous.assemble.virtualtomcat}" 
                     prefix="virtual-tomcat" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="README_wcm.txt,wcm-bootstrap-context.xml" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="virtual_start.bat,
                               virtual_stop.bat,
                               virtual_alf.bat" />
         <zipfileset dir="${dir.project.installer}/extras-wcm" 
                     prefix="extras/wcm" />
      </zip>
   </target>

   <target name="distribute-wcm-linux" 
           depends="assemble-virtual">
      <tar destfile="${dir.continuous.dist}/${file.name.dist.wcm}.tar.gz" 
           longfile="gnu" 
           compression="gzip">
         <tarfileset dir="${dir.continuous.assemble.virtualtomcat}" 
                     prefix="virtual-tomcat" 
                     excludes="**/bin/*.sh,**/bin/*.bat" />
         <tarfileset dir="${dir.continuous.assemble.virtualtomcat}/bin" 
                     prefix="virtual-tomcat/bin" 
                     includes="*.sh" 
                     mode="755" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="README_wcm.txt,
                               wcm-bootstrap-context.xml" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="virtual_alf.sh" 
                     mode="755" />
         <tarfileset dir="${dir.project.installer}/extras-wcm" 
                     prefix="extras/wcm" />
      </tar>
   </target>
 
   <target name="assemble-virtual" 
           depends="init">
      <mkdir dir="${dir.continuous.dist}" />
      <delete quiet="yes" 
              includeEmptyDirs="true" 
              dir="${dir.continuous.assemble.virtualtomcat}" />
      <unzip src="${dir.project.3rdparty.distro}/${file.name.distro.tomcat}" 
             dest="${dir.continuous.assemble}" />
      <move file="${dir.continuous.assemble}/${dir.name.distro.tomcat}" 
            tofile="${dir.continuous.assemble.virtualtomcat}" />
      <move file="${dir.continuous.assemble.virtualtomcat}/server/lib/servlets-ssi.renametojar" 
            tofile="${dir.continuous.assemble.virtualtomcat}/server/lib/servlets-ssi.jar" />
      <delete dir="${dir.continuous.assemble.virtualtomcat}/webapps/balancer" />
      <delete dir="${dir.continuous.assemble.virtualtomcat}/webapps/jsp-examples" />
      <delete dir="${dir.continuous.assemble.virtualtomcat}/webapps/servlets-examples" />
      <delete dir="${dir.continuous.assemble.virtualtomcat}/webapps/tomcat-docs" />
      <delete dir="${dir.continuous.assemble.virtualtomcat}/webapps/webdav" />
      <deploy-virtual-tomcat location="${dir.continuous.assemble.virtualtomcat}" />
   </target>

   <!-- ******************** -->
   <!-- ** Tomcat targets ** -->
   <!-- ******************** -->

   <target name="distribute-tomcat" 
           description="Creates the distibution files for Tomcat"
           depends="distribute-tomcat-windows, 
                    distribute-tomcat-linux" />

   <target name="distribute-tomcat-windows" 
           depends="assemble-tomcat">
      <zip destfile="${dir.continuous.dist}/${file.name.dist.tomcat}.zip">
         <zipfileset dir="${dir.continuous.assemble.tomcat}" 
                     prefix="tomcat" 
                     excludes="bin/*.sh" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="licenses/**,alf_start.bat,alf_stop.bat" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="tomcat/alfresco.bat" 
                     fullpath="alfresco.bat" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="tomcat/README_win.txt" 
                     fullpath="README.txt" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="README_mysql.txt" />
         <zipfileset dir="${dir.project.installer.extras}" 
                     prefix="extras" 
                     excludes="**/*.sh" />
         <zipfileset dir="${dir.project.installer.alfdata}" 
                     prefix="alf_data" />
         <zipfileset dir="${dir.project.installer.binwin}" 
                     prefix="bin" />
         <zipfileset dir="${dir.project.netbios}/dll" 
                     prefix="bin" />
      </zip>
   </target>

   <target name="distribute-tomcat-linux" 
           depends="assemble-tomcat">
      <tar destfile="${dir.continuous.dist}/${file.name.dist.tomcat}.tar.gz" 
           longfile="gnu" 
           compression="gzip">
         <tarfileset dir="${dir.continuous.assemble.tomcat}" 
                     prefix="tomcat" 
                     excludes="bin/*.sh,bin/*.bat,bin/*.exe" />
         <tarfileset dir="${dir.continuous.assemble.tomcat}/bin" 
                     prefix="tomcat/bin" 
                     includes="*.sh" 
                     mode="755" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="licenses/**" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="tomcat/alfresco.sh" 
                     fullpath="alfresco.sh" 
                     mode="755" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="tomcat/README_linux.txt" 
                     fullpath="README.txt" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="README_mysql_linux.txt" 
                     fullpath="README_mysql.txt" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="tomcat/README_osx.txt" 
                     fullpath="README_osx.txt" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="zstart_oo.sh" 
                     mode="755" />
         <tarfileset dir="${dir.project.installer.extras}" 
                     prefix="extras" 
                     excludes="**/*.bat" />
         <tarfileset dir="${dir.project.installer.alfdata}" 
                     prefix="alf_data" />
      </tar>
   </target>

   <target name="assemble-tomcat" 
           depends="init">
      <mkdir dir="${dir.continuous.dist}" />

      <unzip src="${dir.project.3rdparty.distro}/${file.name.distro.tomcat}" 
             dest="${dir.continuous.assemble}" />
      <move file="${dir.continuous.assemble}/${dir.name.distro.tomcat}" 
            tofile="${dir.continuous.assemble.tomcat}" />
      <delete dir="${dir.continuous.assemble.tomcat}/webapps/balancer" />
      <delete dir="${dir.continuous.assemble.tomcat}/webapps/jsp-examples" />
      <delete dir="${dir.continuous.assemble.tomcat}/webapps/servlets-examples" />
      <delete dir="${dir.continuous.assemble.tomcat}/webapps/tomcat-docs" />
      <delete dir="${dir.continuous.assemble.tomcat}/webapps/webdav" />

      <!-- make sure the MySQL connector is present and up to date -->
      <delete>
         <fileset dir="${dir.continuous.assemble.tomcat}/common/lib" 
                  includes="mysql-connector*" 
                  excludes="${file.name.jar.mysql.connector}" />
      </delete>
      <copy todir="${dir.continuous.assemble.tomcat}/common/lib" 
            file="${dir.project.3rdparty.lib}/${dir.name.devenv}/${file.name.jar.mysql.connector}" />

      <!-- make sure the context is set for no serialization -->
      <copy todir="${dir.continuous.assemble.tomcat}/conf" 
            file="${dir.project.installer.tomcat}/context.xml" 
            overwrite="true"/>

      <!-- place latest Xalan jars to ensure they are used -->
      <copy todir="${dir.continuous.assemble.tomcat}/common/endorsed" 
            file="${dir.project.3rdparty.lib}/${dir.name.xalan}/${file.name.jar.xalan}" />
      <copy todir="${dir.continuous.assemble.tomcat}/common/endorsed" 
            file="${dir.project.3rdparty.lib}/${dir.name.xalan}/${file.name.jar.serializer}" />

      <!-- copy project files common to both platforms -->
      <copy todir="${dir.continuous.assemble.tomcat}/webapps">
         <fileset dir="${dir.project.webclient.dist}" 
                  includes="${file.name.war.webclient}" />
      </copy>
      <copy todir="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension">
         <fileset dir="${dir.project.repository.config}/alfresco/extension" />
         <fileset dir="${dir.project.webclient.config}/alfresco/extension" />
         <fileset dir="${dir.project.installer.extension}" />
      </copy>
      <copy todir="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/messages">
         <fileset dir="${dir.project.installer.messages}" />
      </copy>

      <!-- rename model files ready for use -->
      <move tofile="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension/web-client-config-custom.xml"
            file="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension/web-client-config-custom.xml.sample" />
      <move tofile="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension/customModel.xml"
            file="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension/customModel.xml.sample" />
      <move tofile="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension/exampleModel.xml"
            file="${dir.continuous.assemble.tomcat}/shared/classes/alfresco/extension/exampleModel.xml.sample" />
   </target>

   <!-- ***************** -->
   <!-- ** WAR targets ** -->
   <!-- ***************** -->

   <target name="distribute-war" 
           description="Creates the WAR file distribution for all platforms"
           depends="init" >
      <mkdir dir="${dir.continuous.dist}" />

      <zip destfile="${dir.continuous.dist}/${file.name.dist.war}.zip">
         <zipfileset dir="${dir.project.netbios}/dll" 
                     prefix="bin"/>
         <zipfileset dir="${dir.project.installer.extras}" 
                     prefix="extras" 
                     excludes="**/*.sh" />
         <zipfileset dir="${dir.project.installer.alfdata}" 
                     prefix="alf_data" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="licenses/**,
                               README_war.txt" />
         <zipfileset dir="${dir.project.installer}" 
                     includes="README_mysql.txt" />
         <zipfileset dir="${dir.project.webclient.dist}" 
                     includes="${file.name.war.webclient}" />
         <zipfileset dir="${dir.project.repository.config}/alfresco/extension" 
                     prefix="extensions/extension" />
         <zipfileset dir="${dir.project.webclient.config}/alfresco/extension" 
                     prefix="extensions/extension" />
         <zipfileset dir="${dir.project.installer.messages}" 
                     prefix="extensions/messages" />
         <zipfileset dir="${dir.project.3rdparty.lib}/${dir.name.xalan}" 
                     includes="${file.name.jar.xalan},${file.name.jar.serializer}" 
                     prefix="endorsed" />
      </zip>

      <tar destfile="${dir.continuous.dist}/${file.name.dist.war}.tar.gz" 
           longfile="gnu" 
           compression="gzip">
         <tarfileset dir="${dir.project.installer.extras}" 
                     prefix="extras" 
                     excludes="**/*.bat" />
         <tarfileset dir="${dir.project.installer.alfdata}" 
                     prefix="alf_data" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="licenses/**,
                               README_war.txt" />
         <tarfileset dir="${dir.project.installer}" 
                     includes="README_mysql_linux.txt" 
                     fullpath="README_mysql.txt" />
         <tarfileset dir="${dir.project.webclient.dist}" 
                     includes="${file.name.war.webclient}" />
         <tarfileset dir="${dir.project.repository.config}/alfresco/extension" 
                     prefix="extensions/extension" />
         <tarfileset dir="${dir.project.webclient.config}/alfresco/extension" 
                     prefix="extensions/extension" />
         <tarfileset dir="${dir.project.installer.messages}" 
                     prefix="extensions/messages" />
         <tarfileset dir="${dir.project.3rdparty.lib}/${dir.name.xalan}" 
                     includes="${file.name.jar.xalan},
                               ${file.name.jar.serializer}" 
                     prefix="endorsed" />
      </tar>
   </target>

   <!-- ******************************** -->
   <!-- ** Web Service Client targets ** -->
   <!-- ******************************** -->

   <target name="distribute-webserviceclient" 
           description="Creates the web service client distribution file for all platforms"
           depends="init">
      <mkdir dir="${dir.continuous.dist}" />

      <zip destfile="${dir.continuous.dist}/${file.name.dist.webserviceclient}.zip">
         <zipfileset dir="${dir.project.webserviceclient.dist}" />
         <zipfileset dir="${dir.project.webserviceclient.config}/alfresco" 
                     prefix="alfresco"/>
      </zip>

      <tar destfile="${dir.continuous.dist}/${file.name.dist.webserviceclient}.tar.gz" 
           longfile="gnu" 
           compression="gzip">
         <tarfileset dir="${dir.project.webserviceclient.dist}" />
         <tarfileset dir="${dir.project.webserviceclient.config}/alfresco" 
                     prefix="alfresco"/>
      </tar>
   </target>

   <!-- ************************************ -->
   <!-- ** Module Management Tool targets ** -->
   <!-- ************************************ -->
   
   <target name="assemble-mmt" 
           depends="init">

      <!-- Create the required directory structure -->
      <mkdir dir="${dir.continuous.dist}" />
      <mkdir dir="${dir.continuous.assemble.mmt}" />

      <!-- extract the one-jar file -->
      <unjar src="${dir.project.3rdparty.lib}/one-jar/one-jar-boot-0.95.jar" 
             dest="${dir.continuous.assemble.mmt}" 
             overwrite="true" />
      <!-- remove unwanted files -->
      <delete >
         <fileset dir="${dir.continuous.assemble.mmt}">
            <include name="**/*.java" />
            <include name="**/boot-manifest.mf" />
         </fileset>
      </delete>

      <!-- copy required jars into lib folder -->
      <copy todir="${dir.continuous.assemble.mmt}/lib" 
            flatten="false">
         <fileset dir="${dir.project.3rdparty.lib}" 
                  includes="**/jug.jar" />
         <fileset dir="${dir.project.3rdparty.lib}" 
                  includes="**/truezip.jar" />
      </copy>

      <!-- get the files for the main mmt jar -->
      <copy todir="${dir.continuous.assemble.mmt}/tmp-mmt-jar" 
            flatten="false">
         <fileset dir="${dir.project.core.classes}" 
                  includes="org/alfresco/i18n/I18NUtil.class" />
         <fileset dir="${dir.project.core.classes}" 
                  includes="org/alfresco/error/AlfrescoRuntimeException.class" />
         <fileset dir="${dir.project.core.classes}" 
                  includes="org/alfresco/util/VersionNumber.class" />
         <fileset dir="${dir.project.core.classes}" 
                  includes="org/alfresco/util/ISO8601DateFormat.class" />
         <fileset dir="${dir.project.core.classes}" 
                  includes="org/alfresco/util/Pair.class" />
         <fileset dir="${dir.project.repository.classes}" 
                  includes="org/alfresco/repo/module/tool/default-file-mapping.properties" />
         <fileset dir="${dir.project.repository.classes}" 
                  includes="org/alfresco/repo/module/**/*.class" />
         <fileset dir="${dir.project.repository.classes}" 
                  includes="org/alfresco/service/cmr/module/**/*.class" />
      </copy>
      <!-- copy in a manifest file -->
      <copy tofile="${dir.continuous.assemble.mmt}/tmp-mmt-jar/META-INF/MANIFEST.MF" >
         <fileset dir="${dir.project.repository}/source/meta-inf" 
                  includes="mmt-manifest.mf" />
      </copy>
      <!-- jar the main mmt classes -->
      <mkdir dir="${dir.continuous.assemble.mmt}/main" />
      <jar destfile="${dir.continuous.assemble.mmt}/main/mmt.jar" 
           manifest="${dir.continuous.assemble.mmt}/tmp-mmt-jar/META-INF/MANIFEST.MF" 
           update="false" >
         <fileset dir="${dir.continuous.assemble.mmt}/tmp-mmt-jar">
            <include name="**/*" />
         </fileset>
      </jar>
      <!-- Remove temp files -->
      <delete dir="${dir.continuous.assemble.mmt}/tmp-mmt-jar" />

   </target>
   
   <target name="distribute-mmt" 
           depends="assemble-mmt"
           description="Creates the Alfresco Module Management Tool distribution file for all platforms">
      <mkdir dir="${dir.continuous.dist}" />

      <zip destfile="${dir.continuous.dist}/${file.name.dist.mmt}.jar">
         <zipfileset dir="${dir.continuous.assemble.mmt}" />
      </zip>
   </target>

   <!-- *********************** -->
   <!-- ** Benchmark targets ** -->
   <!-- *********************** -->

   <target name="distribute-benchmark" 
           description="Creates the Alfresco benchmark distribution file for all platforms"
           depends="assemble-benchmark">
      <zip destfile="${dir.continuous.dist}/${file.name.dist.benchmark}.zip">
         <zipfileset dir="${dir.continuous.assemble.benchmark}" />
      </zip>

      <tar destfile="${dir.continuous.dist}/${file.name.dist.benchmark}.tar.gz" 
           longfile="gnu" 
           compression="gzip">
         <tarfileset dir="${dir.continuous.assemble.benchmark}" />
      </tar>
   </target>

   <target name="assemble-benchmark" 
           depends="init">
      <mkdir dir="${dir.continuous.dist}" />

      <!-- Get the jars -->
      <mkdir dir="${dir.continuous.assemble.benchmark}/lib" />
      <copy todir="${dir.continuous.assemble.benchmark}/lib">
         <fileset dir="${dir.project.benchmarkframework.lib}" 
                  includes="**/*.jar" />
         <fileset dir="${dir.project.benchmarktests.lib}" 
                  includes="**/*.jar" />
         <fileset dir="${dir.project.benchmarkframework.dist}" 
                  includes="${file.name.jar.benchmarkframework}"/>
         <fileset dir="${dir.project.benchmarktests.dist}" 
                  includes="${file.name.jar.benchmarktests}"/>
      </copy>

      <!-- Get the configuration files -->
      <mkdir dir="${dir.continuous.assemble.benchmark}/config" />
      <copy todir="${dir.continuous.assemble.benchmark}/config">
         <fileset dir="${dir.project.benchmarkframework.config}" 
                  includes="repository-profile*.properties" />
         <fileset dir="${dir.project.benchmarktests.config}" 
                  includes="**/*.xml" />
         <fileset dir="${dir.project.benchmarktests.config}" 
                  includes="**/*.sample" />
      </copy>
      <copy file="${dir.project.benchmarktests.config}/classpath.config.dist" 
            tofile="${dir.continuous.assemble.benchmark}/config/classpath.config" />
      <copy file="${dir.project.benchmarkframework.config}/benchmark-config.properties.dist" 
            tofile="${dir.continuous.assemble.benchmark}/config/benchmark-config.properties" />

      <!-- Create the data folders -->
      <mkdir dir="${dir.continuous.assemble.benchmark}/data" />
      <mkdir dir="${dir.continuous.assemble.benchmark}/data/output" />
      <mkdir dir="${dir.continuous.assemble.benchmark}/data/content" />
      <copy file="${dir.project.benchmarkframework}/data/content/SmallTextDocument.java" 
            todir="${dir.continuous.assemble.benchmark}/data/content" />

      <!-- Get the documentation -->
      <!-- TODO -->

      <!-- Get the ant file -->
      <copy todir="${dir.continuous.assemble.benchmark}" 
            file="${dir.project.benchmarktests}/build.xml" />
      <copy todir="${dir.continuous.assemble.benchmark}" 
            file="${dir.project.benchmarktests}/build-jvm-args.xml" />
      <copy tofile="${dir.continuous.assemble.benchmark}/build-common.xml"    
            file="${dir.project.benchmarktests}/build-common.xml.dist" />
      <copy tofile="${dir.continuous.assemble.benchmark}/build-classpath.xml" 
            file="${dir.project.benchmarktests}/build-classpath.xml.dist" />
   </target>

   <!-- ***************** -->
   <!-- ** SDK targets ** -->
   <!-- ***************** -->

   <target name="distribute-sdk" 
           description="Creates the sdk distribution file for all platforms" 
           depends="verify-sdk">
      <zip destfile="${dir.continuous.dist}/${file.name.dist.sdk}.zip">
         <zipfileset dir="${dir.continuous.assemble.sdk}" />
         <zipfileset dir="${dir.project.installer.extras}" 
                     prefix="extras" 
                     excludes="**/*.sh" />
      </zip>

      <tar destfile="${dir.continuous.dist}/${file.name.dist.sdk}.tar.gz" 
           longfile="gnu" 
           compression="gzip">
         <tarfileset dir="${dir.continuous.assemble.sdk}" />
         <tarfileset dir="${dir.project.installer.extras}" 
                     prefix="extras" 
                     excludes="**/*.bat" />
      </tar>
   </target>
   
   <target name="verify-sdk" 
           depends="assemble-sdk">
      <mkdir dir="${dir.continuous.assemble.sdk.verify}" />
      
      <copy todir="${dir.continuous.assemble.sdk.verify}/lib">
         <fileset dir="${dir.continuous.assemble.sdk}/lib" />
      </copy>
      <copy todir="${dir.continuous.assemble.sdk.verify}/samples">
         <fileset dir="${dir.continuous.assemble.sdk}/samples" />
      </copy>
      
      <taskdef name="verify-classpath" 
               classname="org.alfresco.devenv.ant.VerifyEclipseClasspath">
         <classpath refid="classpath.compile" />
      </taskdef>
   
      <verify-classpath projectdir="${dir.continuous.assemble.sdk.verify}/lib/server" />
      <verify-classpath projectdir="${dir.continuous.assemble.sdk.verify}/lib/remote" />
      
      <subant target="compile">
         <fileset dir="${dir.continuous.assemble.sdk.verify}/samples" 
                  includes="*/build.xml"/>
      </subant>
   </target>

   <target name="assemble-sdk" 
           depends="generate-docs">
      <mkdir dir="${dir.continuous.dist}" />

      <!-- -->
      <!-- Binaries -->
      <!-- -->
      <mkdir dir="${dir.continuous.assemble.sdk}/bin" />
      <copy todir="${dir.continuous.assemble.sdk}/bin">
         <fileset dir="${dir.project.netbios}/dll" 
                  includes="*.dll" />
         <fileset dir="${dir.project.installer}" 
                  includes=".hotspot_compiler" />
      </copy>

      <!-- -->
      <!-- Readme -->
      <!-- -->
      <copy todir="${dir.continuous.assemble.sdk}" 
            file="${dir.project.sdk}/readme.txt" />

      <!-- -->
      <!-- Documentation -->
      <!-- -->
      <mkdir dir="${dir.continuous.assemble.sdk}/doc" />

      <!-- Javadoc -->
      <mkdir dir="${dir.continuous.assemble.sdk}/doc/api" />
      <zip destfile="${dir.continuous.assemble.sdk}/doc/api/core-doc.zip">
         <zipfileset dir="${dir.project.core.docs.java}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/doc/api/repository-doc.zip">
         <zipfileset dir="${dir.project.repository.docs.java}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/doc/api/remote-api-doc.zip">
         <zipfileset dir="${dir.project.remoteapi.docs.java}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/doc/api/web-client-doc.zip">
         <zipfileset dir="${dir.project.webclient.docs.java}" />
      </zip>

      <!-- Taglib -->
      <mkdir dir="${dir.continuous.assemble.sdk}/doc/taglib" />
      <zip destfile="${dir.continuous.assemble.sdk}/doc/taglib/alfresco-taglib-doc.zip">
         <zipfileset dir="${dir.project.webclient.docs.taglib}" />
      </zip>

      <!-- -->
      <!-- Libraries -->
      <!-- -->
      <mkdir dir="${dir.continuous.assemble.sdk}/lib" />

      <!-- Remote API Libraries -->
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/remote" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/remote" 
            file="${dir.project.webserviceclient.dist}/${file.name.jar.webserviceclient}" />
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/remote/wsdl" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/remote/wsdl">
         <fileset dir="${dir.project.remoteapi.src.wsdl}" 
                  includes="*.wsdl,*.xsd" />
      </copy>

      <!-- Server Libraries -->
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/server" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.core.dist}/${file.name.jar.core}" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.repository.dist}/${file.name.jar.repository}" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.remoteapi.dist}/${file.name.jar.remoteapi}" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.jndi.dist}/${file.name.jar.jndi}" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.mbeans.dist}/${file.name.jar.mbeans}" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server"
            file="${dir.project.deployment.dist}/${file.name.jar.deployment}" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.webclient.dist}/${file.name.jar.webclient}" />

      <!-- Deployment Libraries -->
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/deployment"/>
      <copy todir="${dir.continous.assemble.sdk}/lib/deployment"
            file="${dir.project.core.dist}/${file.name.jar.core}"/>
      <copy todir="${dir.continous.assemble.sdk}/lib/deployment"
            file="${dir.project.deployment.dist}/${file.name.jar.core}"/>

      <!-- Package configuration as a .jar -->
      <!-- TODO: configuration should ideally live in each of the above .jars -->
      <mkdir dir="${dir.continuous.assemble.sdk}/config" />
      <copy todir="${dir.continuous.assemble.sdk}/config" 
            includeEmptyDirs="false">
         <fileset dir="${dir.project.repository.config}" 
                  excludes="**/extension/*,**/desktop/*" />
         <fileset dir="${dir.project.webclient.config}" 
                  excludes="**/extension/*" />
         <fileset dir="${dir.project.core.src.java}" 
                  includes="log4j.properties" />
      </copy>
      <delete>
         <fileset dir="${dir.continuous.assemble.sdk}/config/alfresco/messages">
            <include name="*_en_US.properties" />
         </fileset>
      </delete>
      <copy todir="${dir.continuous.assemble.sdk}/config/alfresco/messages">
         <fileset dir="${dir.continuous.assemble.sdk}/config/alfresco/messages"/>
         <mapper type="glob" 
                 from="*.properties" 
                 to="*_en_US.properties"/>
      </copy>
      <zip destfile="${dir.continuous.assemble.sdk}/lib/server/config.jar">
         <zipfileset dir="${dir.continuous.assemble.sdk}/config" />
      </zip>
      <delete dir="${dir.continuous.assemble.sdk}/config" />

      <!-- Dependencies -->
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/server/dependencies" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server/dependencies">
         <fileset dir="${dir.project.3rdparty.lib}" 
                  includes="**/*.jar" />
      </copy>
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/server/alfresco/desktop" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server/alfresco/desktop">
         <fileset dir="${dir.project.repository.config}/alfresco/desktop" />
      </copy>
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/server/alfresco/alfresco" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server/alfresco/alfresco">
         <fileset dir="${dir.project.repository.config}/alfresco" 
                  includes="alfresco-jmxrmi.*" />
      </copy>
      <mkdir dir="${dir.continuous.assemble.sdk}/lib/remote/dependencies" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/remote/dependencies" 
            flatten="true">
         <fileset dir="${dir.project.3rdparty.lib}" 
                  includes="${includes.sdk.remote.jars}" />
      </copy>

      <!-- -->
      <!-- Source -->
      <!-- -->
      <mkdir dir="${dir.continuous.assemble.sdk}/src" />
      <zip destfile="${dir.continuous.assemble.sdk}/src/core-src.zip">
         <zipfileset dir="${dir.project.core.src}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/src/remote-api-src.zip">
         <zipfileset dir="${dir.project.remoteapi.src}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/src/repository-src.zip">
         <zipfileset dir="${dir.project.repository.src}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/src/web-service-client-src.zip">
         <zipfileset dir="${dir.project.webserviceclient.src.java}" />
         <zipfileset dir="${dir.project.webserviceclient.src.generated}" />
      </zip>
      <zip destfile="${dir.continuous.assemble.sdk}/src/web-client-src.zip">
         <zipfileset dir="${dir.project.webclient.src}" />
      </zip>

      <!-- -->
      <!-- License -->
      <!-- -->
      <copy todir="${dir.continuous.assemble.sdk}" 
            file="${dir.project.installer.licenses}/notice.txt"  />
      <copy todir="${dir.continuous.assemble.sdk}" 
            file="${dir.project.installer.licenses}/license.txt" />
      <mkdir dir="${dir.continuous.assemble.sdk}/licenses" />
      <copy todir="${dir.continuous.assemble.sdk}/licenses">
         <fileset dir="${dir.project.installer.licenses}/3rd-party" 
                  includes="*.*" />
      </copy>

      <!-- -->
      <!-- Samples -->
      <!-- -->

      <!-- Library Eclipse Projects -->
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.sdk.projects.server}/.project" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/server" 
            file="${dir.project.sdk.projects.server}/.classpath" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/remote" 
            file="${dir.project.sdk.projects.remote}/.project" />
      <copy todir="${dir.continuous.assemble.sdk}/lib/remote" 
            file="${dir.project.sdk.projects.remote}/.classpath" />

      <!-- Sample Projects -->
      <mkdir dir="${dir.continuous.assemble.sdk}/samples" />
      <copy todir="${dir.continuous.assemble.sdk}/samples">
         <fileset dir="${dir.project.sdk.samples}" 
                  excludes="**/build/**" />
      </copy>
   </target>

</project>
