<project name="alfresco" default="build-tomcat" >

   <!-- ********************************** -->
   <!-- ** Initialisation/Configuration ** -->
   <!-- ********************************** -->

   <property name="dir.common" value="${basedir}" />
   <import file="${dir.common}/common-init.xml" />

   <!-- Define an ordered list of projects to build -->
   <target name="init" depends="common-init.init">
      <property name="file.deploy" value="${dir.project.webclient}/build/dist/${file.name.war.alfresco}" />
      
      <filelist id="files.project.build" dir="${dir.product.root}"
                files="${dir.name.projects}/${dir.name.core}/${file.name.project.build}
                       ${dir.name.projects}/${dir.name.repository}/${file.name.project.build}
                       ${dir.name.projects}/${dir.name.remoteapi}/${file.name.project.build}
                       ${dir.name.projects}/${dir.name.jcr}/${file.name.project.build}
                       ${dir.name.projects}/${dir.name.webclient}/${file.name.project.build}
                       ${dir.name.projects}/${dir.name.webserviceclient}/${file.name.project.build}"/>
   </target>

   <!-- ********************** -->
   <!-- ** Building targets ** -->
   <!-- ********************** -->
   
   <target name="build-jboss" depends="init, clean, incremental-jboss" 
           description="Builds the projects for use in JBoss Portal after cleaning"/>
   
   <target name="build-tomcat" depends="init, clean, incremental-tomcat" 
           description="Builds the projects for use in Tomcat after cleaning"/>

   <target name="incremental-jboss" depends="init" description="Builds the projects for use in JBoss">
      <subant target="incremental">
         <property name="server" value="jboss"/>
         <filelist refid="files.project.build"/>
      </subant>
      <antcall target="deploy-jboss" />
   </target>
   
   <target name="incremental-tomcat" depends="init" description="Builds the projects for use in Tomcat">
      <subant target="incremental">
         <property name="server" value="tomcat"/>
         <filelist refid="files.project.build"/>
      </subant>
      <antcall target="deploy-tomcat" />
   </target>

   <!-- ************************* -->
   <!-- ** Compilation targets ** -->
   <!-- ************************* -->
   
   <target name="compile-docs" depends="init" description="Compiles all documentation for all projects">
      <subant target="compile-javadocs">
         <filelist refid="files.project.build"/>
      </subant>
      <subant target="compile-taglibdocs">
         <filelist dir="${dir.product.root}" files="${dir.name.projects}/${dir.name.webclient}/${file.name.project.build}"/>
      </subant>  

      <mkdir dir="${dir.javadoc}"/>
      <mkdir dir="${dir.taglibdoc}"/>
      <copy todir="${dir.javadoc}/${dir.name.core}">
          <fileset dir="${dir.project.core}/build/docs/java"/>
      </copy>
      <copy todir="${dir.javadoc}/${dir.name.remoteapi}">
         <fileset dir="${dir.project.remoteapi}/build/docs/java"/>
      </copy>
      <copy todir="${dir.javadoc}/${dir.name.repository}">
         <fileset dir="${dir.project.repository}/build/docs/java"/>
      </copy>
      <copy todir="${dir.javadoc}/${dir.name.repository}-service-api">
         <fileset dir="${dir.project.repository}/build/docs/java-public-service-api"/>
      </copy>
      <copy todir="${dir.javadoc}/${dir.name.webclient}">
         <fileset dir="${dir.project.webclient}/build/docs/java"/>
      </copy>
      <copy todir="${dir.taglibdoc}">
         <fileset dir="${dir.project.webclient}/build/docs/taglib"/>
      </copy>  
   </target>
   
   <!-- ************************ -->
   <!-- ** Deployment targets ** -->
   <!-- ************************ -->
   
   <target name="deploy-jboss" depends="init" description="Deploys to JBoss">
      <copy file="${file.deploy}" todir="${dir.deploy.jboss}" />
      <!-- ensure mysql drivers are present -->
      <delete>
         <fileset dir="${home.jboss}/server/default/lib" includes="mysql-connector*" excludes="${file.name.mysql.connector}"/>
      </delete>
      <copy todir="${dir.deploy.jboss}/../lib" file="${dir.common.lib}/${file.name.mysql.connector}"/>
      <!-- copy the hotspot_compiler file to bin directory -->
      <copy file="${file.hotspotcompiler}" todir="${home.jboss}/bin" />
   </target>

   <target name="deploy-tomcat" depends="init" description="Deploys to Tomcat">
      <delete dir="${dir.deploy.tomcat}/alfresco" includeEmptyDirs="true" quiet="yes" />
      <delete dir="${home.tomcat}/work/catalina/localhost/alfresco" includeEmptyDirs="true" quiet="yes" />
      <copy file="${file.deploy}" todir="${dir.deploy.tomcat}" />
      <!-- ensure mysql drivers are present -->
      <delete>
         <fileset dir="${home.tomcat}/common/lib" includes="mysql-connector*" excludes="${file.name.mysql.connector}"/>
      </delete>
      <copy todir="${home.tomcat}/common/lib" file="${dir.common.lib}/${file.name.mysql.connector}" />
      <!-- copy the hotspot_compiler file to bin directory -->
      <copy file="${file.hotspotcompiler}" todir="${home.tomcat}/bin" />
   </target>

   <target name="deploy-exploded-jboss" depends="init">
      <input message="Enter name of temporary JBoss folder" addproperty="dir.name.jboss.tmp" />
      <property name="dir.jboss.tmp" value="${dir.deploy.jboss}/../tmp/deploy/${dir.name.jboss.tmp}" />
      <available file="${dir.jboss.tmp}" type="dir" property="present.dir.jboss.tmp" />
      <fail unless="present.dir.jboss.tmp"
            message="The temporary folder you entered does not exist, has JBoss been restarted?" />
      <copy todir="${dir.jboss.tmp}" verbose="true">
         <fileset dir="${dir.project.webclient}/source/web" excludes="WEB-INF/**" />
      </copy>
   </target>

   <target name="deploy-exploded-tomcat" depends="init">
      <copy todir="${dir.deploy.tomcat}/alfresco" verbose="true">
         <fileset dir="${dir.project.webclient}/source/web" excludes="WEB-INF/**" />
      </copy>
   </target>

   <target name="start-tomcat" depends="init" description="Starts the Tomcat server on Windows">
      <exec dir="${home.tomcat}/bin" executable="cmd.exe" spawn="true">
         <arg line="/k startup.bat" />
      </exec>
   </target>
 
   <target name="start-tomcat-debug" depends="init" description="Starts the Tomcat server on Windows">
      <fail unless="env.JPDA_ADDRESS" 
            message="To run Tomcat in debug mode you need to setup the JPDA_ADDRESS enviornment variable"/>
      <fail unless="env.JPDA_TRANSPORT"
            message="To run Tomcat in debug mode you need to setup the JPDA_TRANSPORT enviornment variable"/>
      
      <exec dir="${home.tomcat}/bin" executable="cmd.exe" spawn="true">
         <arg line="/k catalina.bat jpda start" />
      </exec>
   </target>  

   <target name="start-jboss" depends="init" description="Starts the JBoss server on Windows">
      <exec dir="${home.jboss}/bin" executable="cmd.exe" spawn="true">
         <arg line="/k start run.bat" />
      </exec>
   </target>
   
   <!-- ********************** -->
   <!-- ** Testing targets ** -->
   <!-- ********************** -->

   <target name="test" depends="clean" description="Runs unit tests for all the projects">
      <subant target="run-tests">
         <filelist refid="files.project.build"/>
      </subant>
   </target>

   <!-- ********************** -->
   <!-- ** Database targets ** -->
   <!-- ********************** -->
 
   <target name="reset-database" depends="drop-database, create-database"
           description="Drops and re-creates the MySQL database"/>
   
   <target name="create-database" depends="init" description="Creates the MySQL database">
      <property file="${dir.config.repository}/alfresco/repository.properties"/>
      <sql driver="${db.driver}" url="jdbc:mysql:///" classpathref="classpath.compile" print="yes"
          userid="${db.username}" password="${db.password}">
         create database ${db.name};
      </sql>
   </target>
 
   <target name="drop-database" depends="init" description="Drops the MySQL database and cleans the index files">
      <property file="${dir.config.repository}/alfresco/repository.properties"/>
      <sql driver="${db.driver}" url="${db.url}" classpathref="classpath.compile" print="yes"
          userid="${db.username}" password="${db.password}">
         drop database ${db.name};
      </sql>
      
      <!-- cleanup indexes, they could be in several locations so try all of them -->
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.root}" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.project.repository}/alf_data" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.project.remote-api}/alf_data" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.project.jcr}/alf_data" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${home.tomcat}/bin/alf_data" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${home.jboss}/bin/alf_data" />
   </target>  
   
   <!-- ********************** -->
   <!-- ** Cleaning targets ** -->
   <!-- ********************** -->
      
   <target name="clean" depends="init" description="Cleans all the projects">
      <subant target="clean">
         <filelist refid="files.project.build" />
      </subant>
      
      <!-- clean local files up -->
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.build}" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.docs}" />
   </target>
   
   <target name="clean-war" depends="init" description="Cleans just the WAR file">
      <delete file="${file.deploy}" />
      <delete quiet="yes" includeEmptyDirs="true" dir="${dir.project.webclient}/build/assemble" />
   </target>

   <!-- *************** -->
   <!-- Utility targets -->
   <!-- *************** -->

   <target name="load" depends="init" description="Utility support to load data and report performance: loads a directory in one transaction">
      <subant target="incremental">
         <property name="server" value="tomcat"/>
         <filelist refid="files.project.build"/>
      </subant>
      <java classname="org.alfresco.repo.importer.FileImporterTest" fork="true">
         <classpath refid="classpath.unit.test" />
         <jvmarg value ="-server"/>
         <jvmarg value ="-Xmx512m"/>
         <jvmarg value ="-Xms512m"/>
         <!-- The store into which to load -->
         <arg value="workspace://SpacesStore" />
         <!-- The path of the load point -->
         <arg value="app:company_home" />
         <!-- The file or folder to load up -->
         <arg value="W:\content-repository\projects\repository\source\java\org\alfresco" />
         <!-- The import subdirectory -->
         <arg value="import-test-1-" />
         <!-- The number of repeats -->
         <arg value="1" />
      </java>
   </target>
</project>
