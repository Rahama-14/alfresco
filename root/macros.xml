<project name="macros">

   <!-- **************************************************************************** -->
   <!-- ** This file contains the macro definitions used by the main build script ** -->
   <!-- **************************************************************************** -->
   
   <macrodef name="clean" description="Cleans the given project">
      <attribute name="projectdir" />
      <sequential>
         <delete includeEmptyDirs="true" quiet="yes" dir="@{projectdir}/${dir.name.build}/${dir.name.classes}" />
         <delete includeEmptyDirs="true" quiet="yes" dir="@{projectdir}/${dir.name.build}/${dir.name.dist}" />
         <delete includeEmptyDirs="true" quiet="yes" dir="@{projectdir}/${dir.name.build}/${dir.name.assemble}" />
         <delete includeEmptyDirs="true" quiet="yes" dir="@{projectdir}/${dir.name.build}/${dir.name.test.results}" />
         <delete includeEmptyDirs="true" quiet="yes" dir="@{projectdir}/${dir.name.build}/${dir.name.docs}" />
      </sequential>
   </macrodef>
   
   <macrodef name="compile-java" description="Compiles Java source files in the given project">
      <attribute name="projectdir" />
      <sequential>
         <mkdir dir="@{projectdir}/${dir.name.build}/${dir.name.classes}" />
         <javac destdir="@{projectdir}/${dir.name.build}/${dir.name.classes}" fork="true"
                memoryMaximumSize="${mem.size.max}" deprecation="${javac.deprecation}" 
                debug="${javac.debug}"  target="${javac.target}" source="${javac.source}" encoding="${javac.encoding}">
            <src path="@{projectdir}/${dir.name.source}/${dir.name.java}" />
            <classpath refid="classpath.compile" />
         </javac>
         
         <copy todir="@{projectdir}/${dir.name.build}/${dir.name.classes}">
            <fileset dir="@{projectdir}/${dir.name.source}/${dir.name.java}">
               <patternset>
                  <exclude name="**/*.java" />
                  <exclude name="log4j.properties" />
               </patternset>
            </fileset>
         </copy>
      </sequential>
   </macrodef>

   <macrodef name="compile-java-inc-generated" 
             description="Compiles Java source files and generated Java files in the given project">
      <attribute name="projectdir" />
      <sequential>
         <mkdir dir="@{projectdir}/${dir.name.build}/${dir.name.classes}" />
         <javac destdir="@{projectdir}/${dir.name.build}/${dir.name.classes}" fork="true"
                memoryMaximumSize="${mem.size.max}" deprecation="${javac.deprecation}" 
                debug="${javac.debug}"  target="${javac.target}" source="${javac.source}" encoding="${javac.encoding}">
            <src path="@{projectdir}/${dir.name.source}/${dir.name.java}" />
            <src path="@{projectdir}/${dir.name.source}/${dir.name.generated}" />
            <classpath refid="classpath.compile" />
         </javac>
         
         <copy todir="@{projectdir}/${dir.name.build}/${dir.name.classes}">
            <fileset dir="@{projectdir}/${dir.name.source}/${dir.name.java}">
               <patternset>
                  <exclude name="**/*.java" />
                  <exclude name="log4j.properties" />
               </patternset>
            </fileset>
         </copy>
      </sequential>
   </macrodef>
   
   <macrodef name="generate-javadocs">
      <attribute name="projectdir" />
      <attribute name="documenttitle" />
      <attribute name="windowtitle" />
      <sequential>
         <mkdir dir="@{projectdir}/${dir.name.build}/${dir.name.docs}/${dir.name.java}" />
         <javadoc maxmemory="${mem.size.max}" author="true" version="true" 
                  sourcepath="@{projectdir}/${dir.name.source}/${dir.name.java}" 
                  destdir="@{projectdir}/${dir.name.build}/${dir.name.docs}/${dir.name.java}" 
                  packagenames="${javadoc.packages.include}"
                  excludepackagenames="${javadoc.packages.exclude}" 
                  bottom="${javadoc.copyright}"
                  doctitle="@{documenttitle}"
                  windowtitle="@{windowtitle}" 
                  classpathref="classpath.javadoc">
            <!-- doclet that hides public classes/members via @exclude -->
            <doclet name="ExcludeDoclet" path="${dir.project.3rdparty.lib}/${dir.name.devenv}/exclude-doclet.jar"/>
         </javadoc>
      </sequential>
   </macrodef>
   
   <macrodef name="run-tests" description="Runs the tests for the given project">
      <attribute name="projectdir" />
      <sequential>
         <mkdir dir="@{projectdir}/${dir.name.build}/${dir.name.test.results}" />
         <junit printsummary="yes" fork="yes" maxmemory="${mem.size.max}" haltonfailure="yes" dir="@{projectdir}">
            <jvmarg value="-server"/>
            <classpath refid="classpath.unit.test" />
            <formatter type="xml" />
            <batchtest todir="@{projectdir}/${dir.name.build}/${dir.name.test.results}">
               <fileset dir="@{projectdir}/${dir.name.source}/${dir.name.java}">
                  <patternset refid="files.tests" />
               </fileset>
            </batchtest>
         </junit>
      </sequential>
   </macrodef>

   <macrodef name="deploy-virtual-tomcat" description="Deploys the files required for the virtualisation server to the given location">
      <attribute name="location" />
      <sequential>
         <copy todir="@{location}/server/lib"  file="${dir.project.catalinavirtual.dist}/${file.name.jar.catalinavirtual}"/>
         <copy todir="@{location}/common/lib"  file="${dir.project.jndi.dist}/${file.name.jar.jndi}"/>
         <copy todir="@{location}/common/lib"  file="${dir.project.repository.dist}/${file.name.jar.repository}"/>
         <copy todir="@{location}/common/lib"  file="${dir.project.core.dist}/${file.name.jar.core}"/>
         <copy todir="@{location}/common/lib"  file="${dir.project.3rdparty.lib}/spring-2.0.2.jar"/>
         <copy todir="@{location}/conf"        file="${dir.project.repository.config}/alfresco/alfresco-shared.properties"/>
         <copy todir="@{location}/conf"        file="${dir.project.repository.config}/alfresco/alfresco-jmxrmi.password"/>
         <copy todir="@{location}/conf"        file="${dir.project.repository.config}/alfresco/alfresco-jmxrmi.access"/>
         <copy todir="@{location}/conf"        file="${dir.project.jndi.config}/alfresco-virtserver-context.xml"/>
         <copy todir="@{location}/conf"        file="${dir.project.jndi.config}/alfresco-virtserver.properties"/>
         <copy todir="@{location}/conf"        file="${dir.project.catalinavirtual.config}/server.xml" overwrite="yes"/>
         <copy todir="@{location}/conf"        file="${dir.project.catalinavirtual.config}/web.xml"    overwrite="yes"/>
      </sequential>
   </macrodef>

   <macrodef name="install-amp" description="Installs an AMP file into the given WAR file">
      <attribute name="ampfile" />
      <attribute name="warfile" />
      <sequential>
         <java dir="." fork="true" classname="org.alfresco.repo.module.tool.ModuleManagementTool">
            <classpath refid="classpath.compile"/>
            <arg line="install @{ampfile} @{warfile} -force -verbose -nobackup"/>
         </java>
      </sequential>
   </macrodef>
</project>

