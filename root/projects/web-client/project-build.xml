<project name="web-client" default="build">

   <path id="path.common" path="${basedir}/../../common"/>
   <property name="dir.common" refid="path.common"/>
   <import file="${dir.common}/common.xml"/>

   <!-- we want to build a WAR file in this project -->
   <target name="package" depends="package-war" />

   <!-- override the common assemble-war target -->
   <target name="assemble-war" depends="common.assemble-war">
      <fail unless="server" message="You must supply a value for the 'server' property to indicate which WAR to build" />
      
      <condition property="isTomcat">
         <equals arg1="${server}" arg2="tomcat" casesensitive="false" trim="yes"/>
      </condition>
      <condition property="isJBoss">
         <equals arg1="${server}" arg2="jboss" casesensitive="false" trim="yes"/>
      </condition>
      
      <echo level="info">isTomcat = ${isTomcat}</echo>
      <echo level="info">isJBoss = ${isJBoss}</echo>
      
      <antcall target="assemble-war-common" />
      <antcall target="assemble-war-tomcat" />
      <antcall target="assemble-war-jboss" />
      <!--<antcall target="sample-website" />-->
   </target>
   
   <target name="assemble-war-common">
      <copy todir="${dir.assemble}/WEB-INF">
         <fileset dir="${dir.project.installer}" includes="licenses/**" />
         <fileset dir="${dir.project.remoteapi}/source/web/WEB-INF"/>
      </copy>
      
      <copy todir="${dir.assemble}/WEB-INF/lib">
         <fileset dir="${dir.common.lib}/jibx" includes="*.jar" />
         <fileset dir="${dir.common.lib}/openoffice" includes="*.jar" />
         <fileset dir="${dir.common.lib}/jmagick" includes="*.jar" />
         <fileset dir="${dir.common.lib}/commons" includes="*.jar" />
         <fileset dir="${dir.common.lib}/jgroups" includes="*.jar" />
         <fileset dir="${dir.common.lib}/treecache" includes="*.jar" />
         <fileset dir="${dir.common.lib}/swarmcache" includes="*.jar" />
         <fileset dir="${dir.common.lib}/jbpm" includes="*.jar" />
         <fileset dir="${dir.common.lib}/chiba" includes="*.jar" />
	 <fileset dir="${dir.common.lib}/fop" includes="*.jar"/>
         <fileset dir="${dir.project.core}/build/dist" includes="${dir.name.core}.jar" />
         <fileset dir="${dir.project.repository}/build/dist" includes="${dir.name.repository}.jar" />
         <fileset dir="${dir.project.mbeans}/build/dist" includes="alfresco-${dir.name.mbeans}.jar" />
         <fileset dir="${dir.project.remoteapi}/build/dist" includes="${dir.name.remoteapi}.jar" />
      </copy>

      <mkdir dir="${dir.assemble}/scripts/ajax"/>
      <unzip src="${dir.common.lib}/dojo-0.3.1-ajax.zip"
	     dest="${dir.assemble}/scripts/ajax">
	<patternset>
	  <include name="dojo-0.3.1-ajax/*.js"/>
	  <include name="dojo-0.3.1-ajax/src/**"/>
	</patternset>
      </unzip>
      <delete dir="${dir.assemble}/scripts/ajax/dojo"/>
      <rename src="${dir.assemble}/scripts/ajax/dojo-0.3.1-ajax"
        dest="${dir.assemble}/scripts/ajax/dojo"/>

      <unzip src="${dir.common.lib}/tinymce_2_0_6_1.zip"
	     dest="${dir.assemble}/scripts">
	<patternset>
	  <include name="tinymce/jscripts/tiny_mce/**"/>
	  <exclude name="tinymce/jscripts/tiny_mce/plugins/**"/>
	  <exclude name="tinymce/jscripts/tiny_mce/themes/simple/**"/>
	  <exclude name="tinymce/jscripts/tiny_mce/themes/advanced/docs/**"/>
	  <exclude name="**/*.txt"/>
	</patternset>
      </unzip>
      <move file="${dir.assemble}/scripts/tinymce/jscripts/tiny_mce"
	    todir="${dir.assemble}/scripts/"/>
      <delete dir="${dir.assemble}/scripts/tinymce"/>
	    
      <!-- add config files to WEB-INF/classes -->
      <copy todir="${dir.assemble}/WEB-INF/classes">
         <fileset dir="${dir.config.repository}" excludes="**/*.sample" />
         <fileset dir="${dir.config.webclient}" excludes="**/*.sample" />
      </copy>
      
      <!-- clean up previously generated properties files -->
      <delete>
         <fileset dir="${dir.assemble}/WEB-INF/classes/alfresco/messages">
            <include name="*_en_US.properties" />
         </fileset>
      </delete>
      
      <copy todir="${dir.assemble}/WEB-INF/classes/alfresco/messages">
         <fileset dir="${dir.assemble}/WEB-INF/classes/alfresco/messages"/>
         <mapper type="glob" from="*.properties" to="*_en_US.properties"/>
      </copy>
      
      <copy todir="${dir.assemble}/wsdl">
         <fileset dir="${dir.project.remoteapi}/source/wsdl" />
      </copy>
      
   </target>
 
   <target name="assemble-war-tomcat" if="isTomcat">
      <!-- remove the jboss specific stuff from WEB-INF -->
      <delete>
         <fileset dir="${dir.assemble}/WEB-INF" includes="${webinf.delete.tomcat}" />
      </delete>
      
      <copy todir="${dir.assemble}/WEB-INF/classes" file="${dir.project.core}/source/java/log4j.properties" />
   </target>
   
   <target name="assemble-war-jboss" if="isJBoss">
      <!-- remove the JARs that cause problems in JBoss -->
      <delete>
         <fileset dir="${dir.assemble}/WEB-INF/lib" includes="${webinf.lib.delete.jboss}" />
      </delete>
   </target>
   
   <target name="sample-website" depends="init">
     <delete failonerror="false">
       <fileset dir="${dir.build}/sample-website"/>
     </delete>
     <mkdir dir="${dir.build}/sample-website/alfresco"/>
     <mkdir dir="${dir.build}/sample-website/alfresco/classes"/>
     <javac srcdir="${dir.src}/test-resources/websites/alfresco/ROOT/WEB-INF/classes"
	    destdir="${dir.build}/sample-website/alfresco/classes"
            deprecation="on" debug="on" target="1.5" source="1.5"
	    classpathref="classpath.compile"/>
     <jar basedir="${dir.build}/classes"
          destfile="${dir.build}/sample-website/alfresco/alfresco-form-data-functions.jar"
	  includes="org/alfresco/web/forms/*.class"/>
     <jar basedir="${dir.build}/sample-website/alfresco/classes"
	  destfile="${dir.build}/sample-website/alfresco/alfresco-sample-website.jar"
	  includes="**/*.class"/>
     <mkdir dir="${dir.dist}"/>
     <war destfile="${dir.dist}/alfresco-sample-website.war"
	  webxml="${dir.src}/test-resources/websites/alfresco/ROOT/WEB-INF/web.xml">
       <lib dir="${dir.common.lib}">
	 <include name="standard.jar"/>
	 <include name="jstl.jar"/>
       </lib>
       <lib dir="${dir.build}/sample-website/alfresco"/>
       <fileset dir="${dir.src}/test-resources/websites/alfresco/ROOT">
	 <exclude name="WEB-INF/**"/>
	 <exclude name="**/.svn"/>
       </fileset>
       <webinf file="${dir.src}/test-resources/websites/alfresco/ROOT/WEB-INF/pr.tld"/>
     </war>
   </target>
</project>
