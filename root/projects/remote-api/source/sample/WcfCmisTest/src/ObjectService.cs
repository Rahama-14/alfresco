//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://www.cmis.org/ns/1.0", ClrNamespace="www.cmis.org.ns._1._01")]



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://www.cmis.org/ns/1.0", ConfigurationName="ObjectServicePort")]
public interface ObjectServicePort
{
    
    // CODEGEN: Parameter 'failedToDelete' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="FolderNotValidException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [return: System.ServiceModel.MessageParameterAttribute(Name="failedToDelete")]
    deleteTreeResponse deleteTree(deleteTree request);
    
    // CODEGEN: Parameter 'allowableActionCollection' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [return: System.ServiceModel.MessageParameterAttribute(Name="allowableActionCollection")]
    getAllowableActionsResponse getAllowableActions(getAllowableActions request);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="NotInFolderException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="FolderNotValidException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    void moveObject(string objectId, string folderId, string sourceFolderId);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StorageException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StreamNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    void deleteContentStream(string documentId);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="TypeNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="FolderNotValidException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    [return: System.ServiceModel.MessageParameterAttribute(Name="objectId")]
    string createFolder(string typeId, folderObjectType propertyCollection, string folderId);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    void updateProperties(string objectId, string changeToken, documentFolderOrRelationshipObjectType @object);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StorageException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StreamNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="TypeNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="FolderNotValidException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    [return: System.ServiceModel.MessageParameterAttribute(Name="objectId")]
    string createDocument(string typeId, documentObjectType propertyCollection, string folderId, contentStream contentStream, versioningStateEnum versioningState);
    
    // CODEGEN: Parameter 'stream' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StorageException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StreamNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OffsetException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    [return: System.ServiceModel.MessageParameterAttribute(Name="stream")]
    getContentStreamResponse getContentStream(getContentStream request);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="TypeNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    [return: System.ServiceModel.MessageParameterAttribute(Name="objectId")]
    string createRelationship(string typeId, relationshipObjectType propertyCollection, string sourceObjectId, string targetObjectId);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StorageException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="StreamNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="AlreadyExistsException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    void setContentStream(string documentId, bool overwriteFlag, contentStream contentStream);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConstraintViolationException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    void deleteObject(string objectId);
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="InvalidArgumentException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="FilterNotValidException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="RuntimeException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ObjectNotFoundException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="PermissionDeniedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="OperationNotSupportedException")]
    [System.ServiceModel.FaultContractAttribute(typeof(object), Action="", Name="ConcurrencyException")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(objectTypeBase))]
    [return: System.ServiceModel.MessageParameterAttribute(Name="object")]
    documentFolderOrRelationshipObjectType getProperties(string objectId, versionEnum returnVersion, string filter);
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.648")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cmis.org/ns/1.0")]
public enum deleteWithMultiFilingEnum
{
    
    /// <remarks/>
    unfile,
    
    /// <remarks/>
    deleteSingleFiledDocs,
    
    /// <remarks/>
    delete,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="deleteTree", WrapperNamespace="http://www.cmis.org/ns/1.0", IsWrapped=true)]
public partial class deleteTree
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=0)]
    public string folderId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=1)]
    public deleteWithMultiFilingEnum unfileMultiFiledDocuments;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=2)]
    public bool continueOnFailure;
    
    public deleteTree()
    {
    }
    
    public deleteTree(string folderId, deleteWithMultiFilingEnum unfileMultiFiledDocuments, bool continueOnFailure)
    {
        this.folderId = folderId;
        this.unfileMultiFiledDocuments = unfileMultiFiledDocuments;
        this.continueOnFailure = continueOnFailure;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="deleteTreeResponse", WrapperNamespace="http://www.cmis.org/ns/1.0", IsWrapped=true)]
public partial class deleteTreeResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute("objectId", IsNullable=false)]
    public string[] failedToDelete;
    
    public deleteTreeResponse()
    {
    }
    
    public deleteTreeResponse(string[] failedToDelete)
    {
        this.failedToDelete = failedToDelete;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.648")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cmis.org/ns/1.0")]
public enum allowableActionsEnum
{
    
    /// <remarks/>
    viewContent,
    
    /// <remarks/>
    updateProperties,
    
    /// <remarks/>
    setContent,
    
    /// <remarks/>
    removeFromFolder,
    
    /// <remarks/>
    move,
    
    /// <remarks/>
    getRelationships,
    
    /// <remarks/>
    getProperties,
    
    /// <remarks/>
    getParents,
    
    /// <remarks/>
    getChilderen,
    
    /// <remarks/>
    getAllVersions,
    
    /// <remarks/>
    deleteVersion,
    
    /// <remarks/>
    deleteContent,
    
    /// <remarks/>
    delete,
    
    /// <remarks/>
    checkOut,
    
    /// <remarks/>
    checkIn,
    
    /// <remarks/>
    cancelCheckOut,
    
    /// <remarks/>
    addToFolder,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="getAllowableActions", WrapperNamespace="http://www.cmis.org/ns/1.0", IsWrapped=true)]
public partial class getAllowableActions
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=0)]
    public string objectId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=1)]
    public string asUser;
    
    public getAllowableActions()
    {
    }
    
    public getAllowableActions(string objectId, string asUser)
    {
        this.objectId = objectId;
        this.asUser = asUser;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="getAllowableActionsResponse", WrapperNamespace="http://www.cmis.org/ns/1.0", IsWrapped=true)]
public partial class getAllowableActionsResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute("action", IsNullable=false)]
    public allowableActionsEnum[] allowableActionCollection;
    
    public getAllowableActionsResponse()
    {
    }
    
    public getAllowableActionsResponse(allowableActionsEnum[] allowableActionCollection)
    {
        this.allowableActionCollection = allowableActionCollection;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.648")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.cmis.org/ns/1.0")]
public partial class contentStream
{
    
    private string mimeTypeField;
    
    private string nameField;
    
    private string uriField;
    
    private byte[] streamField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string mimeType
    {
        get
        {
            return this.mimeTypeField;
        }
        set
        {
            this.mimeTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public string name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public string uri
    {
        get
        {
            return this.uriField;
        }
        set
        {
            this.uriField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=3)]
    public byte[] stream
    {
        get
        {
            return this.streamField;
        }
        set
        {
            this.streamField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.648")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cmis.org/ns/1.0")]
public enum versioningStateEnum
{
    
    /// <remarks/>
    checkedOut,
    
    /// <remarks/>
    checkedInMinor,
    
    /// <remarks/>
    checkedInMajor,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="getContentStream", WrapperNamespace="http://www.cmis.org/ns/1.0", IsWrapped=true)]
public partial class getContentStream
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=0)]
    public string documentId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=1)]
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string offset;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=2)]
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string length;
    
    public getContentStream()
    {
    }
    
    public getContentStream(string documentId, string offset, string length)
    {
        this.documentId = documentId;
        this.offset = offset;
        this.length = length;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="getContentStreamResponse", WrapperNamespace="http://www.cmis.org/ns/1.0", IsWrapped=true)]
public partial class getContentStreamResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.cmis.org/ns/1.0", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] stream;
    
    public getContentStreamResponse()
    {
    }
    
    public getContentStreamResponse(byte[] stream)
    {
        this.stream = stream;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.648")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cmis.org/ns/1.0")]
public enum versionEnum
{
    
    /// <remarks/>
    @this,
    
    /// <remarks/>
    latestMajor,
    
    /// <remarks/>
    latest,
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ObjectServicePortChannel : ObjectServicePort, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ObjectServicePortClient : System.ServiceModel.ClientBase<ObjectServicePort>, ObjectServicePort
{
    
    public ObjectServicePortClient()
    {
    }
    
    public ObjectServicePortClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ObjectServicePortClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ObjectServicePortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ObjectServicePortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    deleteTreeResponse ObjectServicePort.deleteTree(deleteTree request)
    {
        return base.Channel.deleteTree(request);
    }
    
    public string[] deleteTree(string folderId, deleteWithMultiFilingEnum unfileMultiFiledDocuments, bool continueOnFailure)
    {
        deleteTree inValue = new deleteTree();
        inValue.folderId = folderId;
        inValue.unfileMultiFiledDocuments = unfileMultiFiledDocuments;
        inValue.continueOnFailure = continueOnFailure;
        deleteTreeResponse retVal = ((ObjectServicePort)(this)).deleteTree(inValue);
        return retVal.failedToDelete;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    getAllowableActionsResponse ObjectServicePort.getAllowableActions(getAllowableActions request)
    {
        return base.Channel.getAllowableActions(request);
    }
    
    public allowableActionsEnum[] getAllowableActions(string objectId, string asUser)
    {
        getAllowableActions inValue = new getAllowableActions();
        inValue.objectId = objectId;
        inValue.asUser = asUser;
        getAllowableActionsResponse retVal = ((ObjectServicePort)(this)).getAllowableActions(inValue);
        return retVal.allowableActionCollection;
    }
    
    public void moveObject(string objectId, string folderId, string sourceFolderId)
    {
        base.Channel.moveObject(objectId, folderId, sourceFolderId);
    }
    
    public void deleteContentStream(string documentId)
    {
        base.Channel.deleteContentStream(documentId);
    }
    
    public string createFolder(string typeId, folderObjectType propertyCollection, string folderId)
    {
        return base.Channel.createFolder(typeId, propertyCollection, folderId);
    }
    
    public void updateProperties(string objectId, string changeToken, documentFolderOrRelationshipObjectType @object)
    {
        base.Channel.updateProperties(objectId, changeToken, @object);
    }
    
    public string createDocument(string typeId, documentObjectType propertyCollection, string folderId, contentStream contentStream, versioningStateEnum versioningState)
    {
        return base.Channel.createDocument(typeId, propertyCollection, folderId, contentStream, versioningState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    getContentStreamResponse ObjectServicePort.getContentStream(getContentStream request)
    {
        return base.Channel.getContentStream(request);
    }
    
    public byte[] getContentStream(string documentId, string offset, string length)
    {
        getContentStream inValue = new getContentStream();
        inValue.documentId = documentId;
        inValue.offset = offset;
        inValue.length = length;
        getContentStreamResponse retVal = ((ObjectServicePort)(this)).getContentStream(inValue);
        return retVal.stream;
    }
    
    public string createRelationship(string typeId, relationshipObjectType propertyCollection, string sourceObjectId, string targetObjectId)
    {
        return base.Channel.createRelationship(typeId, propertyCollection, sourceObjectId, targetObjectId);
    }
    
    public void setContentStream(string documentId, bool overwriteFlag, contentStream contentStream)
    {
        base.Channel.setContentStream(documentId, overwriteFlag, contentStream);
    }
    
    public void deleteObject(string objectId)
    {
        base.Channel.deleteObject(objectId);
    }
    
    public documentFolderOrRelationshipObjectType getProperties(string objectId, versionEnum returnVersion, string filter)
    {
        return base.Channel.getProperties(objectId, returnVersion, filter);
    }
}
namespace www.cmis.org.ns._1._01
{
    using System.Runtime.Serialization;
     
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="failedToDelete", Namespace="http://www.cmis.org/ns/1.0", ItemName="objectId")]
    public class failedToDelete : System.Collections.Generic.List<string>
    {
    }
    
   
}
