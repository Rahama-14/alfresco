<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:ns1="http://www.cmis.org/2008/05" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="DiscoveryServicePort" targetNamespace="http://www.cmis.org/2008/05" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema xmlns:tns="http://www.cmis.org/2008/05" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.cmis.org/2008/05" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="addObjectToFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="folderId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addObjectToFolderResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="allowableActions" nillable="true" type="tns:cmisAllowableActionsType" />
      <xs:element name="applyPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="policyId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applyPolicyResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="cancelCheckOut">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="documentId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cancelCheckOutResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="checkIn">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="documentId" type="xs:string" />
            <xs:element name="major" type="xs:boolean" />
            <xs:element name="properties" type="tns:cmisPropertiesType" />
            <xs:element name="contentStream" type="tns:cmisContentStreamType" />
            <xs:element name="checkinComment" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkInResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="documentId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkOut">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="documentId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkOutResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="documentId" type="xs:string" />
            <xs:element name="contentCopied" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="choice" nillable="true" type="tns:cmisChoiceType" />
      <xs:element name="choiceBoolean" nillable="true" type="tns:cmisChoiceBooleanType" />
      <xs:element name="choiceDateTime" nillable="true" type="tns:cmisChoiceDateTimeType" />
      <xs:element name="choiceDecimal" nillable="true" type="tns:cmisChoiceDecimalType" />
      <xs:element name="choiceHtml" nillable="true" type="tns:cmisChoiceHtmlType" />
      <xs:element name="choiceId" nillable="true" type="tns:cmisChoiceIdType" />
      <xs:element name="choiceInteger" nillable="true" type="tns:cmisChoiceIntegerType" />
      <xs:element name="choiceString" nillable="true" type="tns:cmisChoiceStringType" />
      <xs:element name="choiceUri" nillable="true" type="tns:cmisChoiceUriType" />
      <xs:element name="choiceXml" nillable="true" type="tns:cmisChoiceXmlType" />
      <xs:element name="constraintViolationException" nillable="true" type="tns:constraintViolationExceptionType" />
      <xs:element name="contentAlreadyExistsException" nillable="true" type="tns:contentAlreadyExistsExceptionType" />
      <xs:element name="createDocument">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="typeId" type="xs:string" />
            <xs:element name="properties" type="tns:cmisPropertiesType" />
            <xs:element minOccurs="0" name="folderId" type="xs:string" />
            <xs:element name="contentStream" type="tns:cmisContentStreamType" />
            <xs:element name="versioningState" type="tns:enumVersioningState" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createDocumentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="typeId" type="xs:string" />
            <xs:element name="properties" type="tns:cmisPropertiesType" />
            <xs:element name="folderId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="typeId" type="xs:string" />
            <xs:element name="properties" type="tns:cmisPropertiesType" />
            <xs:element name="folderId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createRelationship">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="typeId" type="xs:string" />
            <xs:element name="properties" type="tns:cmisPropertiesType" />
            <xs:element name="sourceObjectId" type="xs:string" />
            <xs:element name="targetObjectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createRelationshipResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllVersions">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="versionSeriesId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllVersionsResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteContentStream">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="documentId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteContentStreamResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteObject">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteObjectResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteTree">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="folderId" type="xs:string" />
            <xs:element name="unfileNonfolderObjects" type="tns:enumUnfileNonfolderObjects" />
            <xs:element name="continueOnFailure" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteTreeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="failedToDelete">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="objectId" nillable="true" type="xs:string" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="documentType" nillable="true" type="tns:cmisTypeDocumentDefinitionType" />
      <xs:element name="filterNotValidException" nillable="true" type="tns:filterNotValidExceptionType" />
      <xs:element name="folderNotValidException" nillable="true" type="tns:folderNotValidExceptionType" />
      <xs:element name="folderType" nillable="true" type="tns:cmisTypeFolderDefinitionType" />
      <xs:element name="getAllVersions">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="versionSeriesId" type="xs:string" />
            <xs:element name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllVersionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowableActions">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowableActionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="allowableActions" type="tns:cmisAllowableActionsType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppliedPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="filter" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppliedPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCheckedoutDocs">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="folderID" type="xs:string" />
            <xs:element name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
            <xs:element name="maxItems" type="xs:integer" />
            <xs:element name="skipCount" type="xs:integer" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCheckedoutDocsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
            <xs:element name="hasMoreItems" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChildren">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="folderId" type="xs:string" />
            <xs:element name="type" type="tns:enumTypesOfFileableObjects" />
            <xs:element name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
            <xs:element name="maxItems" type="xs:integer" />
            <xs:element name="skipCount" type="xs:integer" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChildrenResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
            <xs:element name="hasMoreItems" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentStream">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="documentId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentStreamResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="contentStream" type="tns:cmisContentStreamType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDescendants">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="folderId" type="xs:string" />
            <xs:element minOccurs="0" name="type" type="tns:enumTypesOfFileableObjects" />
            <xs:element name="depth" type="xs:integer" />
            <xs:element name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDescendantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFolderParent">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="folderId" type="xs:string" />
            <xs:element minOccurs="0" name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
            <xs:element name="returnToRoot" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFolderParentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getObjectParents">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element minOccurs="0" name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getObjectParentsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="returnVersion" type="tns:enumReturnVersion" />
            <xs:element name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesOfLatestVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="versionSeriesId" type="xs:string" />
            <xs:element name="majorVersion" type="xs:boolean" />
            <xs:element name="filter" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesOfLatestVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="object" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="object" type="tns:cmisObjectType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRelationships">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="direction" type="tns:enumRelationshipDirection" />
            <xs:element name="typeId" type="xs:string" />
            <xs:element name="includeSubRelationshipTypes" type="xs:boolean" />
            <xs:element name="filter" type="xs:string" />
            <xs:element name="includeAllowableActions" type="xs:boolean" />
            <xs:element name="includeRelationships" type="xs:boolean" />
            <xs:element name="maxItems" type="xs:integer" />
            <xs:element name="skipCount" type="xs:integer" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRelationshipsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
            <xs:element name="hasMoreItems" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRepositories">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="getRepositoriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="repository" nillable="true" type="tns:cmisRepositoryEntryType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRepositoryInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRepositoryInfoResponse" nillable="true" type="tns:cmisRepositoryInfoType" />
      <xs:element name="getTypeDefinition">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="typeId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTypeDefinitionResponse">
        <xs:complexType>
          <xs:choice>
            <xs:element ref="tns:type" />
            <xs:element ref="tns:documentType" />
            <xs:element ref="tns:folderType" />
            <xs:element ref="tns:policyType" />
            <xs:element ref="tns:relationshipType" />
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTypes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="typeId" type="xs:string" />
            <xs:element name="returnPropertyDefinitions" type="xs:boolean" />
            <xs:element name="maxItems" type="xs:integer" />
            <xs:element name="skipCount" type="xs:integer" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element ref="tns:type" />
              <xs:element ref="tns:documentType" />
              <xs:element ref="tns:folderType" />
              <xs:element ref="tns:policyType" />
              <xs:element ref="tns:relationshipType" />
            </xs:choice>
            <xs:element name="hasMoreItems" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasMoreItems" nillable="true" type="xs:boolean" />
      <xs:element name="invalidArgumentException" nillable="true" type="tns:invalidArgumentExceptionType" />
      <xs:element name="moveObject">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="targetFolderId" type="xs:string" />
            <xs:element name="sourceFolderId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveObjectResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="notInFolderException" nillable="true" type="tns:notInFolderExceptionType" />
      <xs:element name="object" nillable="true" type="tns:cmisObjectType" />
      <xs:element name="objectNotFoundException" nillable="true" type="tns:objectNotFoundExceptionType" />
      <xs:element name="offsetException" nillable="true" type="tns:offsetExceptionType" />
      <xs:element name="operationNotSupportedException" nillable="true" type="tns:operationNotSupportedExceptionType" />
      <xs:element name="permissionDeniedException" nillable="true" type="tns:permissionDeniedExceptionType" />
      <xs:element name="policyType" nillable="true" type="tns:cmisTypePolicyDefinitionType" />
      <xs:element name="property" nillable="true" type="tns:cmisProperty" />
      <xs:element name="propertyBoolean" nillable="true" type="tns:cmisPropertyBoolean" />
      <xs:element name="propertyBooleanDefinition" nillable="true" type="tns:cmisPropertyBooleanDefinitionType" />
      <xs:element name="propertyDateTime" nillable="true" type="tns:cmisPropertyDateTime" />
      <xs:element name="propertyDateTimeDefinition" nillable="true" type="tns:cmisPropertyDateTimeDefinitionType" />
      <xs:element name="propertyDecimal" nillable="true" type="tns:cmisPropertyDecimal" />
      <xs:element name="propertyDecimalDefinition" nillable="true" type="tns:cmisPropertyDecimalDefinitionType" />
      <xs:element name="propertyDefinition" nillable="true" type="tns:cmisPropertyDefinitionType" />
      <xs:element name="propertyHtml" nillable="true" type="tns:cmisPropertyHtml" />
      <xs:element name="propertyHtmlDefinition" nillable="true" type="tns:cmisPropertyHtmlDefinitionType" />
      <xs:element name="propertyId" nillable="true" type="tns:cmisPropertyId" />
      <xs:element name="propertyIdDefinition" nillable="true" type="tns:cmisPropertyIdDefinitionType" />
      <xs:element name="propertyInteger" nillable="true" type="tns:cmisPropertyInteger" />
      <xs:element name="propertyIntegerDefinition" nillable="true" type="tns:cmisPropertyIntegerDefinitionType" />
      <xs:element name="propertyString" nillable="true" type="tns:cmisPropertyString" />
      <xs:element name="propertyStringDefinition" nillable="true" type="tns:cmisPropertyStringDefinitionType" />
      <xs:element name="propertyUri" nillable="true" type="tns:cmisPropertyUri" />
      <xs:element name="propertyUriDefinition" nillable="true" type="tns:cmisPropertyUriDefinitionType" />
      <xs:element name="propertyXml" nillable="true" type="tns:cmisPropertyXml" />
      <xs:element name="propertyXmlDefinition" nillable="true" type="tns:cmisPropertyXmlDefinitionType" />
      <xs:element name="query" nillable="true" type="tns:cmisQueryType" />
      <xs:element name="queryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
            <xs:element name="hasMoreItems" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="relationshipType" nillable="true" type="tns:cmisTypeRelationshipDefinitionType" />
      <xs:element name="removeObjectFromFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="folderId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeObjectFromFolderResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="removePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="policyId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removePolicyResponse">
        <xs:complexType>
          <xs:sequence />
        </xs:complexType>
      </xs:element>
      <xs:element name="repositoryInfo" nillable="true" type="tns:cmisRepositoryInfoType" />
      <xs:element name="runtimeException" nillable="true" type="tns:runtimeExceptionType" />
      <xs:element name="setContentStream">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="documentId" type="xs:string" />
            <xs:element name="overwriteFlag" type="xs:boolean" />
            <xs:element name="contentStream" type="tns:cmisContentStreamType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setContentStreamResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="documentId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="storageException" nillable="true" type="tns:storageExceptionType" />
      <xs:element name="streamNotSupportedException" nillable="true" type="tns:streamNotSupportedExceptionType" />
      <xs:element name="terminator" nillable="true" type="xs:string" />
      <xs:element name="type" nillable="true" type="tns:cmisTypeDefinitionType" />
      <xs:element name="typeNotFoundException" nillable="true" type="tns:typeNotFoundExceptionType" />
      <xs:element name="updateConflictException" nillable="true" type="tns:updateConflictExceptionType" />
      <xs:element name="updateProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="repositoryId" type="xs:string" />
            <xs:element name="objectId" type="xs:string" />
            <xs:element name="changeToken" type="xs:string" />
            <xs:element name="properties" type="tns:cmisPropertiesType" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="objectId" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="versioningException" nillable="true" type="tns:versioningExceptionType" />
      <xs:complexType name="cmisQueryType">
        <xs:sequence>
          <xs:element name="statement" type="xs:string" />
          <xs:element minOccurs="0" name="searchAllVersions" type="xs:boolean" />
          <xs:element minOccurs="0" name="pageSize" type="xs:integer" />
          <xs:element minOccurs="0" name="skipCount" type="xs:integer" />
          <xs:element minOccurs="0" name="returnAllowableActions" type="xs:boolean" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisObjectType">
        <xs:sequence>
          <xs:element minOccurs="0" name="properties" type="tns:cmisPropertiesType" />
          <xs:element minOccurs="0" name="allowableActions" type="tns:cmisAllowableActionsType" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="relationship" nillable="true" type="tns:cmisObjectType" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="child" nillable="true" type="tns:cmisObjectType" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisPropertiesType">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="propertyUri" nillable="true" type="tns:cmisPropertyUri" />
            <xs:element name="propertyId" nillable="true" type="tns:cmisPropertyId" />
            <xs:element name="propertyString" nillable="true" type="tns:cmisPropertyString" />
            <xs:element name="propertyXml" nillable="true" type="tns:cmisPropertyXml" />
            <xs:element name="propertyHtml" nillable="true" type="tns:cmisPropertyHtml" />
            <xs:element name="propertyBoolean" nillable="true" type="tns:cmisPropertyBoolean" />
            <xs:element name="propertyDecimal" nillable="true" type="tns:cmisPropertyDecimal" />
            <xs:element name="propertyDateTime" nillable="true" type="tns:cmisPropertyDateTime" />
            <xs:element name="propertyInteger" nillable="true" type="tns:cmisPropertyInteger" />
          </xs:choice>
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisPropertyUri">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:anyURI" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisProperty">
        <xs:sequence />
        <xs:attribute ref="tns:name" use="required" />
        <xs:attribute ref="tns:index" />
      </xs:complexType>
      <xs:complexType name="cmisPropertyId">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:string" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:attribute ref="tns:href" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyDecimal">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:decimal" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyXml">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyString">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:string" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyDateTime">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:dateTime" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyHtml">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyInteger">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:integer" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyBoolean">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisProperty">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:boolean" />
            </xs:sequence>
            <xs:attribute ref="tns:propertyType" />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisAllowableActionsType">
        <xs:sequence>
          <xs:element minOccurs="0" name="parentId" type="xs:string" />
          <xs:element minOccurs="0" name="parentUrl" type="xs:string" />
          <xs:element minOccurs="0" name="canDelete" type="xs:boolean" />
          <xs:element minOccurs="0" name="canUpdateProperties" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetProperties" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetRelationships" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetParents" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetFolderParent" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetDescendants" type="xs:boolean" />
          <xs:element minOccurs="0" name="canMove" type="xs:boolean" />
          <xs:element minOccurs="0" name="canDeleteVersion" type="xs:boolean" />
          <xs:element minOccurs="0" name="canDeleteContent" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCheckout" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCancelCheckout" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCheckin" type="xs:boolean" />
          <xs:element minOccurs="0" name="canSetContent" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetAllVersions" type="xs:boolean" />
          <xs:element minOccurs="0" name="canAddToFolder" type="xs:boolean" />
          <xs:element minOccurs="0" name="canRemoveFromFolder" type="xs:boolean" />
          <xs:element minOccurs="0" name="canViewContent" type="xs:boolean" />
          <xs:element minOccurs="0" name="canAddPolicy" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetAppliedPolicies" type="xs:boolean" />
          <xs:element minOccurs="0" name="canRemovePolicy" type="xs:boolean" />
          <xs:element minOccurs="0" name="canGetChildren" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCreateDocument" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCreateFolder" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCreateRelationship" type="xs:boolean" />
          <xs:element minOccurs="0" name="canCreatePolicy" type="xs:boolean" />
          <xs:element minOccurs="0" name="canDeleteTree" type="xs:boolean" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisTypeDocumentDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisTypeDefinitionType">
            <xs:sequence>
              <xs:element name="versionable" type="xs:boolean" />
              <xs:element name="contentStreamAllowed" type="tns:enumContentStreamAllowed" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisTypeDefinitionType">
        <xs:sequence>
          <xs:element name="typeId" type="xs:string" />
          <xs:element name="queryName" type="xs:string" />
          <xs:element name="displayName" type="xs:string" />
          <xs:element name="baseType" type="tns:enumObjectType" />
          <xs:element name="baseTypeQueryName" type="xs:string" />
          <xs:element minOccurs="0" name="parentId" type="xs:anyType" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element name="creatable" type="xs:boolean" />
          <xs:element name="fileable" type="xs:boolean" />
          <xs:element name="queryable" type="xs:boolean" />
          <xs:element name="controllable" type="xs:boolean" />
          <xs:element default="true" name="includedInSupertypeQuery" type="xs:boolean" />
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="propertyHtmlDefinition" type="tns:cmisPropertyHtmlDefinitionType" />
            <xs:element name="propertyIdDefinition" type="tns:cmisPropertyIdDefinitionType" />
            <xs:element name="propertyIntegerDefinition" type="tns:cmisPropertyIntegerDefinitionType" />
            <xs:element name="propertyDateTimeDefinition" type="tns:cmisPropertyDateTimeDefinitionType" />
            <xs:element name="propertyDecimalDefinition" type="tns:cmisPropertyDecimalDefinitionType" />
            <xs:element name="propertyUriDefinition" type="tns:cmisPropertyUriDefinitionType" />
            <xs:element name="propertyStringDefinition" type="tns:cmisPropertyStringDefinitionType" />
            <xs:element name="propertyXmlDefinition" type="tns:cmisPropertyXmlDefinitionType" />
            <xs:element name="propertyBooleanDefinition" type="tns:cmisPropertyBooleanDefinitionType" />
          </xs:choice>
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisPropertyHtmlDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceHtmlType" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyDefinitionType">
        <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="id" type="xs:string" />
          <xs:element name="displayName" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element name="propertyType" type="tns:enumPropertyType" />
          <xs:element name="cardinality" type="tns:enumCardinality" />
          <xs:element name="updateability" type="tns:enumUpdateability" />
          <xs:element minOccurs="0" name="inherited" type="xs:boolean" />
          <xs:element name="required" type="xs:boolean" />
          <xs:element name="queryable" type="xs:boolean" />
          <xs:element name="orderable" type="xs:boolean" />
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="choiceUri" type="tns:cmisChoiceUriType" />
            <xs:element name="choiceXml" type="tns:cmisChoiceXmlType" />
            <xs:element name="choiceDateTime" type="tns:cmisChoiceDateTimeType" />
            <xs:element name="choiceId" type="tns:cmisChoiceIdType" />
            <xs:element name="choiceHtml" type="tns:cmisChoiceHtmlType" />
            <xs:element name="choiceString" type="tns:cmisChoiceStringType" />
            <xs:element name="choiceDecimal" type="tns:cmisChoiceDecimalType" />
            <xs:element name="choiceInteger" type="tns:cmisChoiceIntegerType" />
            <xs:element name="choiceBoolean" type="tns:cmisChoiceBooleanType" />
          </xs:choice>
          <xs:element minOccurs="0" name="openChoice" type="xs:boolean" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisChoiceHtmlType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceType" abstract="true">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="tns:choice" />
            <xs:element ref="tns:choiceBoolean" />
            <xs:element ref="tns:choiceDateTime" />
            <xs:element ref="tns:choiceDecimal" />
            <xs:element ref="tns:choiceId" />
            <xs:element ref="tns:choiceInteger" />
            <xs:element ref="tns:choiceString" />
            <xs:element ref="tns:choiceHtml" />
            <xs:element ref="tns:choiceUri" />
            <xs:element ref="tns:choiceXml" />
          </xs:choice>
        </xs:sequence>
        <xs:attribute ref="tns:index" />
        <xs:attribute ref="tns:key" />
      </xs:complexType>
      <xs:complexType name="cmisChoiceDecimalType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:decimal" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceXmlType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceDateTimeType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:dateTime" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceStringType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:string" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceUriType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:anyURI" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceIntegerType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:integer" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceIdType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:string" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisChoiceBooleanType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisChoiceType">
            <xs:sequence>
              <xs:element minOccurs="0" name="value" type="xs:boolean" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyIntegerDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceIntegerType" />
              <xs:element minOccurs="0" name="maxValue" type="xs:integer" />
              <xs:element minOccurs="0" name="minValue" type="xs:integer" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyBooleanDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceBooleanType" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyIdDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceIdType" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyStringDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceStringType" />
              <xs:element minOccurs="0" name="maxLength" type="xs:integer" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyDecimalDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceDecimalType" />
              <xs:element minOccurs="0" name="precision" type="xs:integer" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyDateTimeDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceDateTimeType" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyUriDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceUriType" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisPropertyXmlDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisPropertyDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="defaultValue" nillable="true" type="tns:cmisChoiceXmlType" />
              <xs:element minOccurs="0" name="schemaURI" type="xs:anyURI" />
              <xs:element minOccurs="0" name="encoding" type="xs:string" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisTypeFolderDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisTypeDefinitionType">
            <xs:sequence />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisTypeRelationshipDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisTypeDefinitionType">
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="allowedSourceTypes" nillable="true" type="xs:string" />
              <xs:element minOccurs="0" maxOccurs="unbounded" name="allowedTargetTypes" nillable="true" type="xs:string" />
            </xs:sequence>
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisTypePolicyDefinitionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisTypeDefinitionType">
            <xs:sequence />
            <xs:anyAttribute namespace="##other" processContents="skip" />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisRepositoryEntryType">
        <xs:sequence>
          <xs:element name="repositoryID" type="xs:string" />
          <xs:element name="repositoryName" type="xs:string" />
          <xs:element name="repositoryURI" type="xs:anyURI" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisRepositoryInfoType">
        <xs:sequence>
          <xs:element name="repositoryId" type="xs:string" />
          <xs:element name="repositoryName" type="xs:string" />
          <xs:element name="repositoryRelationship" type="xs:string" />
          <xs:element name="repositoryDescription" type="xs:string" />
          <xs:element name="vendorName" type="xs:string" />
          <xs:element name="productName" type="xs:string" />
          <xs:element name="productVersion" type="xs:string" />
          <xs:element name="rootFolderId" type="xs:string" />
          <xs:element name="capabilities" type="tns:cmisRepositoryCapabilitiesType" />
          <xs:element name="cmisVersionsSupported" type="xs:string" />
          <xs:element minOccurs="0" name="repositorySpecificInformation" type="tns:cmisAnyXml" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisRepositoryCapabilitiesType">
        <xs:sequence>
          <xs:element name="capabilityMultifiling" type="xs:boolean" />
          <xs:element name="capabilityUnfiling" type="xs:boolean" />
          <xs:element name="capabilityVersionSpecificFiling" type="xs:boolean" />
          <xs:element name="capabilityPWCUpdateable" type="xs:boolean" />
          <xs:element name="capabilityPWCSearchable" type="xs:boolean" />
          <xs:element name="capabilityAllVersionsSearchable" type="xs:boolean" />
          <xs:element name="capabilityQuery" type="tns:enumCapabilityQuery" />
          <xs:element name="capabilityJoin" type="tns:enumCapabilityJoin" />
          <xs:element name="capabilityFullText" type="tns:enumCapabilityFullText" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="skip" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisAnyXml">
        <xs:sequence>
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="notInFolderExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cmisFaultType">
        <xs:sequence>
          <xs:element name="errorCode" type="xs:integer" />
          <xs:element name="errorMessage" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="operationNotSupportedExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="permissionDeniedExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="storageExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="offsetExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="constraintViolationExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="versioningExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="invalidArgumentExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="filterNotValidExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="typeNotFoundExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateConflictExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="folderNotValidExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="objectNotFoundExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="streamNotSupportedExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="runtimeExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="contentAlreadyExistsExceptionType">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:cmisFaultType">
            <xs:sequence />
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="objectTreeCollectionType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="object" nillable="true" type="tns:cmisObjectType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cmisContentStreamType">
        <xs:sequence>
          <xs:element name="length" type="xs:integer" />
          <xs:element minOccurs="0" name="mimeType" type="xs:string" />
          <xs:element minOccurs="0" name="filename" type="xs:string" />
          <xs:element minOccurs="0" name="uri" type="xs:anyURI" />
          <xs:element xmlns:ns1="http://www.w3.org/2005/05/xmlmime" ns1:expectedContentTypes="application/octet-stream" name="stream" type="xs:base64Binary" />
          <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="enumPropertyType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="boolean" />
          <xs:enumeration value="id" />
          <xs:enumeration value="integer" />
          <xs:enumeration value="datetime" />
          <xs:enumeration value="decimal" />
          <xs:enumeration value="html" />
          <xs:enumeration value="string" />
          <xs:enumeration value="uri" />
          <xs:enumeration value="xml" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumContentStreamAllowed">
        <xs:restriction base="xs:string">
          <xs:enumeration value="notallowed" />
          <xs:enumeration value="allowed" />
          <xs:enumeration value="required" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumObjectType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="document" />
          <xs:enumeration value="folder" />
          <xs:enumeration value="relationship" />
          <xs:enumeration value="policy" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumCardinality">
        <xs:restriction base="xs:string">
          <xs:enumeration value="single" />
          <xs:enumeration value="multi" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumUpdateability">
        <xs:restriction base="xs:string">
          <xs:enumeration value="readonly" />
          <xs:enumeration value="readwrite" />
          <xs:enumeration value="whencheckedout" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumUnfileNonfolderObjects">
        <xs:restriction base="xs:string">
          <xs:enumeration value="unfile" />
          <xs:enumeration value="deletesinglefiled" />
          <xs:enumeration value="delete" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumCapabilityQuery">
        <xs:restriction base="xs:string">
          <xs:enumeration value="none" />
          <xs:enumeration value="metadataonly" />
          <xs:enumeration value="fulltextonly" />
          <xs:enumeration value="both" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumCapabilityJoin">
        <xs:restriction base="xs:string">
          <xs:enumeration value="nojoin" />
          <xs:enumeration value="inneronly" />
          <xs:enumeration value="innerandouter" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumCapabilityFullText">
        <xs:restriction base="xs:string">
          <xs:enumeration value="none" />
          <xs:enumeration value="fulltextonly" />
          <xs:enumeration value="fulltextandstructured" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumTypesOfFileableObjects">
        <xs:restriction base="xs:string">
          <xs:enumeration value="documents" />
          <xs:enumeration value="folders" />
          <xs:enumeration value="policies" />
          <xs:enumeration value="any" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumVersioningState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="checkedout" />
          <xs:enumeration value="minor" />
          <xs:enumeration value="major" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumRelationshipDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="source" />
          <xs:enumeration value="target" />
          <xs:enumeration value="both" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="enumReturnVersion">
        <xs:restriction base="xs:string">
          <xs:enumeration value="this" />
          <xs:enumeration value="latest" />
          <xs:enumeration value="latestmajor" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="href" type="xs:anyURI" />
      <xs:attribute name="index" type="xs:integer" />
      <xs:attribute name="key" type="xs:string" />
      <xs:attribute name="name" type="xs:string" />
      <xs:attribute name="propertyType" type="tns:enumPropertyType" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="OperationNotSupportedException">
    <wsdl:part name="OperationNotSupportedException" element="ns1:operationNotSupportedException" />
  </wsdl:message>
  <wsdl:message name="query">
    <wsdl:part name="parameters" element="ns1:query" />
  </wsdl:message>
  <wsdl:message name="UpdateConflictException">
    <wsdl:part name="UpdateConflictException" element="ns1:updateConflictException" />
  </wsdl:message>
  <wsdl:message name="queryResponse">
    <wsdl:part name="parameters" element="ns1:queryResponse" />
  </wsdl:message>
  <wsdl:message name="RuntimeException">
    <wsdl:part name="RuntimeException" element="ns1:runtimeException" />
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="ns1:permissionDeniedException" />
  </wsdl:message>
  <wsdl:message name="ConstraintViolationException">
    <wsdl:part name="ConstraintViolationException" element="ns1:constraintViolationException" />
  </wsdl:message>
  <wsdl:message name="InvalidArgumentException">
    <wsdl:part name="InvalidArgumentException" element="ns1:invalidArgumentException" />
  </wsdl:message>
  <wsdl:portType name="DiscoveryServicePort">
    <wsdl:operation name="query">
      <wsdl:input name="query" message="ns1:query" />
      <wsdl:output name="queryResponse" message="ns1:queryResponse" />
      <wsdl:fault name="InvalidArgumentException" message="ns1:InvalidArgumentException" />
      <wsdl:fault name="ConstraintViolationException" message="ns1:ConstraintViolationException" />
      <wsdl:fault name="RuntimeException" message="ns1:RuntimeException" />
      <wsdl:fault name="UpdateConflictException" message="ns1:UpdateConflictException" />
      <wsdl:fault name="OperationNotSupportedException" message="ns1:OperationNotSupportedException" />
      <wsdl:fault name="PermissionDeniedException" message="ns1:PermissionDeniedException" />
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>