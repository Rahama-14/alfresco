/*
 * Copyright (C) 2005-2008 Alfresco Software Limited.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

 * As a special exception to the terms and conditions of version 2.0 of 
 * the GPL, you may redistribute this Program in connection with Free/Libre 
 * and Open Source Software ("FLOSS") applications as described in Alfresco's 
 * FLOSS exception.  You should have recieved a copy of the text describing 
 * the FLOSS exception, and it is also available here: 
 * http://www.alfresco.com/legal/licensing"
 */
package org.alfresco.web.site.renderer;

import java.io.IOException;

import javax.servlet.http.HttpServletResponse;

import org.alfresco.web.site.FrameworkHelper;
import org.alfresco.web.site.exception.RendererExecutionException;

/**
 * An abstract implementation of the Renderable interface that can be
 * extended by application developers for quick implementation.
 * 
 * @author muzquiano
 */
public abstract class AbstractRenderer implements Renderable
{
    /* (non-Javadoc)
     * @see org.alfresco.web.site.renderer.Renderable#init(org.alfresco.web.site.renderer.RendererContext)
     */
    public void init(RendererContext rendererContext)
    {
    	if(FrameworkHelper.getLogger().isDebugEnabled())
    	{
    		FrameworkHelper.getLogger().debug("Renderer [" + this.getClass().getName() + "] init");
    	}
    }

    /* (non-Javadoc)
     * @see org.alfresco.web.site.renderer.Renderable#head(org.alfresco.web.site.renderer.RendererContext)
     */
    public String head(RendererContext rendererContext)
        throws RendererExecutionException
    {
        /**
         * Default implementation that just returns identifier tag
         */

        String stamp = "<!-- Generated by " + getClass().getName() + " -->";
        if(rendererContext != null && rendererContext.getObject() != null)
        {
            stamp = "<!-- Generated by " + getClass().getName() + " for " + rendererContext.getObject().getId() + " -->";
        }
        stamp += "\r\n";
        
        return stamp;
    }
    
    /* (non-Javadoc)
     * @see org.alfresco.web.site.renderer.Renderable#setRenderer(java.lang.String)
     */
    public void setRenderer(String renderer)
    {
        this.renderer = renderer;
    }

    /* (non-Javadoc)
     * @see org.alfresco.web.site.renderer.Renderable#getRenderer()
     */
    public String getRenderer()
    {
        return this.renderer;
    }
    
    /* (non-Javadoc)
     * @see org.alfresco.web.site.renderer.Renderable#setRendererType(java.lang.String)
     */
    public void setRendererType(String rendererType)
    {
        this.rendererType = rendererType;
    }
    
    /* (non-Javadoc)
     * @see org.alfresco.web.site.renderer.Renderable#getRendererType()
     */
    public String getRendererType()
    {
        return this.rendererType;
    }
    
    /**
     * Commits the given string to the response.
     * 
     * @param response the response
     * @param str the str
     * 
     * @throws IOException Signals that an I/O exception has occurred.
     */
    protected void print(HttpServletResponse response, String str)
        throws RendererExecutionException
    {
        try
        {
            response.getWriter().print(str);
        }
        catch(IOException ex)
        {
            throw new RendererExecutionException("Unable to print string to response: " + str, ex);
        }
    }
    
    
    /** The renderer. */
    protected String renderer;
    
    /** The renderer type. */
    protected String rendererType;
}
