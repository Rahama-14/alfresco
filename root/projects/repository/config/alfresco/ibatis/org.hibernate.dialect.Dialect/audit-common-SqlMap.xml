<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="alfresco.audit">

    <!--                -->
    <!-- Type Defs      -->
    <!--                -->
    
    <typeAlias alias="AuditModel" type="org.alfresco.repo.domain.audit.AuditModelEntity"/>
    <typeAlias alias="AuditApplication" type="org.alfresco.repo.domain.audit.AuditApplicationEntity"/>
    <typeAlias alias="AuditEntry" type="org.alfresco.repo.domain.audit.AuditEntryEntity"/>
    <typeAlias alias="AuditQueryParameters" type="org.alfresco.repo.domain.audit.AuditQueryParameters"/>
    <typeAlias alias="AuditQueryResult" type="org.alfresco.repo.domain.audit.AuditQueryResult"/>

    <!--                -->
    <!-- Result Maps    -->
    <!--                -->

    <resultMap id="result.AuditModel" class="AuditModel">
        <result property="id" column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="contentDataId" column="content_data_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="contentCrc" column="content_crc" jdbcType="BIGINT" javaType="long"/>
    </resultMap>
    <resultMap id="result.AuditApplication" class="AuditApplication">
        <result property="id" column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="auditModelId" column="audit_model_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="applicationNameId" column="app_name_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
    </resultMap>
    <resultMap id="result.AuditEntry" class="AuditEntry">
        <result property="id" column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="auditApplicationId" column="audit_app_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="auditUserId" column="audit_user_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="auditTime" column="audit_time" jdbcType="BIGINT" javaType="long"/>
        <result property="auditValuesId" column="audit_values_id" jdbcType="BIGINT" javaType="long"/>
    </resultMap>
    <resultMap id="result.AuditQuery" class="AuditQueryResult">
        <result property="auditEntryId" column="audit_entry_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="auditAppName" column="audit_app_name" jdbcType="VARCHAR" javaType="string"/>
        <result property="auditUser" column="audit_user" jdbcType="VARCHAR" javaType="string"/>
        <result property="auditTime" column="audit_time" jdbcType="BIGINT" javaType="long"/>
        <result property="auditValuesId" column="audit_values_id" jdbcType="BIGINT" javaType="long"/>
    </resultMap>
  
    <!--                -->
    <!-- Parameter Maps -->
    <!--                -->

    <parameterMap id="parameter.IdMap" class="map">
        <parameter property="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
    </parameterMap>
    <parameterMap id="parameter.AuditQuery" class="AuditQueryParameters">
        <parameter property="auditAppNameShort" jdbcType="VARCHAR" javaType="string"/>
        <parameter property="auditAppNameCrc" jdbcType="BIGINT" javaType="long"/>
        <parameter property="auditUserShort" jdbcType="VARCHAR" javaType="string"/>
        <parameter property="auditUserCrc" jdbcType="BIGINT" javaType="long"/>
        <parameter property="auditFromTime" jdbcType="BIGINT" javaType="long"/>
        <parameter property="auditToTime" jdbcType="BIGINT" javaType="long"/>
    </parameterMap>
  
    <!--                -->
    <!-- SQL Snippets   -->
    <!--                -->
    
    <sql id="insert.AuditModel.AutoIncrement">
        insert into alf_audit_model (content_data_id, content_crc) 
        values (#contentDataId#, #contentCrc#)
    </sql>
    
    <sql id="insert.AuditApplication.AutoIncrement">
        insert into alf_audit_app (audit_model_id, app_name_id) 
        values (#auditModelId#, #applicationNameId#)
    </sql>
    
    <sql id="insert.AuditEntry.AutoIncrement">
        insert into alf_audit_entry (audit_app_id, audit_user_id, audit_time, audit_values_id) 
        values (#auditApplicationId#, #auditUserId#, #auditTime#, #auditValuesId#)
    </sql>
    
    <!--                -->
    <!-- Statements     -->
    <!--                -->
    
    <!-- Get the audit model by the CRC value -->
    <select id="select.AuditModelByCrc" parameterClass="AuditModel" resultMap="result.AuditModel">
        select
            *
        from
            alf_audit_model
        where
            content_crc = #contentCrc#
    </select>

    <!-- Get the audit application by model ID -->
    <select id="select.AuditApplicationByModelId" parameterMap="parameter.IdMap" resultMap="result.AuditApplication">
        select
            *
        from
            alf_audit_app
        where
            audit_model_id = ?
    </select>

    <!-- Get audit entries by application name -->
    <!-- TODO: Use compound parameters for string searching, possibly namespaced from propval -->
    <!-- TODO: Use compound result map for audit values -->
    <select id="select.AuditEntriesSimple" parameterClass="AuditQueryParameters" resultMap="result.AuditQuery">
        select
            entry.id as audit_entry_id,
            user_sv.string_value as audit_user,
            app_sv.string_value as audit_app_name,
            entry.audit_time as audit_time,
            entry.audit_values_id as audit_values_id
        from
            alf_audit_app app
            join alf_prop_value app_pv on (app_pv.id = app.app_name_id)
            join alf_prop_string_value app_sv on (app_sv.id = app_pv.long_value and app_pv.persisted_type = 3)
            join alf_audit_entry entry on (entry.audit_app_id = app.id)
            join alf_prop_value user_pv on (user_pv.id = entry.audit_user_id)
            join alf_prop_string_value user_sv on (user_sv.id = user_pv.long_value and user_pv.persisted_type = 3)
        <dynamic prepend="where">
            <isNotNull prepend="and" property="auditAppNameShort">
	            app_sv.string_end_lower = #auditAppNameShort# and
	            app_sv.string_crc = #auditAppNameCrc#
            </isNotNull>
            <isNotNull prepend="and" property="auditUserShort">
                user_sv.string_end_lower = #auditUserShort# and
                user_sv.string_crc = #auditUserCrc#
            </isNotNull>
            <isNotNull prepend="and" property="auditFromTime">
                <![CDATA[entry.audit_time >= #auditFromTime#]]>
            </isNotNull>
            <isNotNull prepend="and" property="auditToTime">
                <![CDATA[entry.audit_time < #auditToTime#]]>
            </isNotNull>
        </dynamic>
    </select>

</sqlMap>