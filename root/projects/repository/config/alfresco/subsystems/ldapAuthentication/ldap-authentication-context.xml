<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>  
    <!-- DAO that rejects changes - LDAP is read only at the moment. It does allow users to be deleted with out warnings from the UI. --> 
   
    <bean id="authenticationDao" class="org.alfresco.repo.security.authentication.DefaultMutableAuthenticationDao" >
        <property name="allowSetEnabled" value="true" />
        <property name="allowGetEnabled" value="true" />
        <property name="allowDeleteUser" value="true" />
        <property name="allowCreateUser" value="true" />
    </bean>

    <!-- LDAP authentication configuration -->
    
    <!-- 
    
    You can also use JAAS authentication for Kerberos against Active Directory or NTLM if you also require single sign on from the
    web browser. You do not have to use LDAP authentication to synchronise groups and users from an LDAP store if it supports other
    authentication routes, like Active Directory.
    
    -->
    
    <bean id="authenticationComponent"
          class="org.alfresco.repo.security.authentication.ldap.LDAPAuthenticationComponentImpl" 
          parent="authenticationComponentBase">
        <property name="LDAPInitialDirContextFactory">
            <ref bean="ldapInitialDirContextFactory"/>
        </property>
        <property name="userNameFormat">
            <!--
            
            This maps between what the user types in and what is passed through to the underlying LDAP authentication.
            
            "%s" - the user id is passed through without modification.
            Used for LDAP authentication such as DIGEST-MD5, anything that is not "simple".
            
            "cn=%s,ou=London,dc=company,dc=com" - If the user types in "Joe Bloggs" the authenticate as "cn=Joe Bloggs,ou=London,dc=company,dc=com" 
            Usually for simple authentication. Simple authentication always uses the DN for the user.
            
            -->
            <value>${ldap.authentication.userNameFormat}</value>
        </property>
        <property name="nodeService">
            <ref bean="nodeService" />
        </property>
        <property name="personService">
            <ref bean="personService" />
        </property>
        <property name="transactionService">
            <ref bean="transactionService" />
        </property>   
        <property name="escapeCommasInBind">
            <value>${ldap.authentication.escapeCommasInBind}</value>
        </property>
        <property name="escapeCommasInUid">
            <value>${ldap.authentication.escapeCommasInUid}</value>
        </property> 
        <property name="allowGuestLogin">
            <value>${ldap.authentication.allowGuestLogin}</value>
        </property> 
        <property name="defaultAdministratorUserNames">
            <value>${ldap.authentication.defaultAdministratorUserNames}</value>
        </property>
    </bean>
    
    <!--
    
    This bean is used to support general LDAP authentication. It is also used to provide read only access to users and groups
    to pull them out of the LDAP reopsitory
    
    -->
    
    <bean id="ldapInitialDirContextFactory" class="org.alfresco.repo.security.authentication.ldap.LDAPInitialDirContextFactoryImpl">
        <property name="initialDirContextEnvironment">
            <map>
                <!-- The LDAP provider -->
                <entry key="java.naming.factory.initial">
                    <value>${ldap.authentication.java.naming.factory.initial}</value>
                </entry>
                
                <!-- The url to the LDAP server -->
                <!-- Note you can use space separated urls - they will be tried in turn until one works -->
                <!-- This could be used to authenticate against one or more ldap servers (you will not know which one ....) -->
                <entry key="java.naming.provider.url">
                    <value>${ldap.authentication.java.naming.provider.url}</value>
                </entry>
                
                <!-- The authentication mechanism to use      -->
                <!-- Some sasl authentication mechanisms may require a realm to be set -->
                <!--                java.naming.security.sasl.realm -->
                <!-- The available options will depend on your LDAP provider -->
                <entry key="java.naming.security.authentication">
                    <value>${ldap.authentication.java.naming.security.authentication}</value>
                </entry>
                
                <!-- The id of a user who can read group and user information -->
                <!-- This does not go through the pattern substitution defined above and is used "as is" -->
                <entry key="java.naming.security.principal">
                    <value>${ldap.authentication.java.naming.security.principal}</value>
                </entry>
                
                <!-- The password for the user defined above -->
                <entry key="java.naming.security.credentials">
                    <value>${ldap.authentication.java.naming.security.credentials}</value>
                </entry>
            </map>
        </property>
    </bean>
    
   <!-- The passthru servers  -->
   <!-- Properties that specify the server(s) to use for passthru          -->
   <!-- authentication :-                                                  -->
   <!--   useLocalServer   use the local server for authentication         -->
   <!--   domain           use domain controllers from the specified domain-->
   <!--   servers          comma delimted list of server addresses or      -->
   <!--                    names                                           -->
   <bean id="passthruServers" class="org.alfresco.filesys.auth.PassthruServerFactory">
      <property name="useLocalServer">
         <value>${ldap.passthru.authentication.useLocalServer}</value>
      </property>
      <property name="servers">
         <value>${ldap.passthru.authentication.servers}</value>
      </property>
      <property name="domain">
         <value>${ldap.passthru.authentication.domain}</value>
      </property>
      <!-- Timeout value when opening a session to an authentication server, in milliseconds -->
      <property name="timeout">
         <value>${ldap.passthru.authentication.connectTimeout}</value>
      </property>
      <!-- Offline server check interval -->
      <property name="offlineCheckInterval">
         <value>${ldap.passthru.authentication.offlineCheckInterval}</value>
      </property>
      <property name="protocolOrder">
         <value>${ldap.passthru.authentication.protocolOrder}</value>
      </property>
      <property name="nullDomainUseAnyServer">
         <value>true</value>
      </property>
   </bean>
	
   <!-- CIFS authentication and SMB session listener -->
   <bean id="cifsAuthenticator" class="org.alfresco.filesys.auth.cifs.PassthruCifsAuthenticator" parent="cifsAuthenticatorBase">
      <property name="passthruServers">
         <ref bean="passthruServers" />
      </property>
   </bean>

    <!-- FTP authentication -->
    <bean id="ftpAuthenticator" class="org.alfresco.filesys.auth.ftp.AlfrescoFtpAuthenticator" parent="ftpAuthenticatorBase" />
</beans>