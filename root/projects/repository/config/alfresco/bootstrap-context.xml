<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>


<!--
    Repository Bootstrap Sequence.

    This file specifies the initialisation (and order of initialisation) to perform during Repository startup.

    The pattern for adding new initialisation to the bootstrap sequence is as follows:

    1) Develop a bean that implements the Spring interface ApplicationListener
    2) Place the initialisation logic in the method onApplicationEvent(ApplicationEvent event)...

       public void onApplicationEvent(ApplicationEvent event)
       {
          if (event instanceof ContextRefreshedEvent)
          {
             // initialisation logic here
          }
       }

    3) Add the bean definition to this file - Note: the beans are initialised in the order they are specified.
-->

<beans>

    <!-- ensure that the schema is bootstrapped -->
    <bean id="schemaBootstrap" class="org.alfresco.repo.domain.schema.SchemaBootstrap" >
       <property name="localSessionFactory">
          <ref bean="&amp;sessionFactory"></ref>  <!-- inject the actual factory, not a session -->
       </property>
       <property name="maximumStringLength">
          <value>${system.maximumStringLength}</value>
       </property>
       <property name="hibernateMaxExecutions">
          <value>${system.hibernateMaxExecutions}</value>
       </property>
       <property name="updateSchema">
          <value>${db.schema.update}</value>
       </property>
       <property name="schemaUpdateLockRetryCount">
          <value>${db.schema.update.lockRetryCount}</value>
       </property>
       <property name="schemaUpdateLockRetryWaitSeconds">
          <value>${db.schema.update.lockRetryWaitSeconds}</value>
       </property>
       <property name="postCreateScriptUrls">
          <list>
             <value>classpath:alfresco/dbscripts/create/2.2/${db.script.dialect}/AlfrescoPostCreate-2.2-MappedFKIndexes.sql</value>
             <value>classpath:alfresco/dbscripts/create/2.2/${db.script.dialect}/AlfrescoPostCreate-2.2-Extra.sql</value>
             <value>classpath:alfresco/dbscripts/create/2.2/${db.script.dialect}/post-create-indexes-04.sql</value>
             <value>classpath:alfresco/dbscripts/create/3.0/${db.script.dialect}/create-activities-extras.sql</value>
          </list>
       </property>
       <property name="validateUpdateScriptPatches">
          <list>
          </list>
       </property>
       <property name="preUpdateScriptPatches">
          <list>
             <ref bean="patch.schemaUpdateScript-V1.4-1" />
             <ref bean="patch.schemaUpdateScript-V1.4-2" />
             <ref bean="patch.db-V2.1-NotNullColumns" />
             <ref bean="patch.db-V2.2-ACL" />
             <ref bean="patch.db-V2.2-0-CreateMissingTables" />
             <ref bean="patch.db-V2.2-Upgrade-From-2.1" />
             <ref bean="patch.db-V2.2-Upgrade-From-2.2SP1" />
			 <ref bean="patch.db-V2.2-Person" />
			 <ref bean="patch.db-V2.2-OrclBLOB" />
          </list>
       </property>
       <property name="postUpdateScriptPatches">
          <list>
             <ref bean="patch.db-V1.4-TxnCommitTimeIndex" />
             <ref bean="patch.db-V2.0-ContentUrls" />
             <ref bean="patch.db-V2.1-JBPMData" />
             <ref bean="patch.db-V2.1-VersionColumns2" />
             <ref bean="patch.db-V2.1-JBPMProcessKey" />
             <ref bean="patch.db-V2.1-RemoveWcmSubmittedAspect" />
             <ref bean="patch.db-V2.1-AuditPathIndex" />
             <ref bean="patch.db-V3.0-0-CreateActivitiesExtras" />
          </list>
       </property>
    </bean>

    <!-- Bootstrap the AVM -->
    <bean id="avmBootstrap" class="org.alfresco.repo.avm.AvmBootstrap" >
       <property name="issuers">
          <list>
             <ref bean="nodeIssuer" />
             <ref bean="layerIssuer" />
          </list>
       </property>
       <property name="avmLockingAwareService">
            <ref bean="avmLockingAwareService"/>
       </property>
       <property name="avmRepository">
         <ref bean="avmRepository"/>
       </property>
       <property name="permissionService">
         <ref bean="permissionService"/>
       </property>
       <property name="avmSyncService">
            <ref bean="avmSyncService"/>
       </property>
    </bean>

    <!-- Bootstrap AVM Locking Service. -->
    <bean id="avmLockingBootstrap" class="org.alfresco.repo.avm.locking.AVMLockingBootstrap">
       <property name="avmLockingService">
          <ref bean="avmLockingService"/>
       </property>
    </bean>

    <!-- Load models -->
   <bean id="dictionaryRepositoryBootstrap" class="org.alfresco.repo.dictionary.DictionaryRepositoryBootstrap">

      <property name="dictionaryDAO" ref="dictionaryDAO"/>
      <property name="contentService" ref="ContentService"/>      
      <property name="searchService" ref="SearchService"/>
      <property name="transactionService" ref="transactionComponent"/>
      <property name="namespaceService" ref="namespaceService"/>
      <property name="nodeService" ref="NodeService"/>
      <property name="messageService" ref="messageService"/>
      <property name="tenantAdminService" ref="tenantAdminService"/>
         
      <property name="repositoryModelsLocations">
         <list>
            <ref bean="customModelsRepositoryLocation" />
         </list>        
      </property>
         
      <property name="repositoryMessagesLocations">
         <list>
            <ref bean="customMessagesRepositoryLocation" />
         </list>        
      </property>
           
   </bean>

    <!-- Bootstrap Files -->
    <bean id="systemInfoBootstrap" parent="systemInfoImporter">
    </bean>

    <bean id="userBootstrap" parent="userStoreImporter" singleton="false">
        <property name="bootstrapViews">
            <list>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/alfrescoUserStore.xml</prop>
                </props>
                <props>
                    <prop key="path">/${alfresco_user_store.system_container.childname}</prop>
                    <prop key="location">alfresco/bootstrap/alfrescoAuthorityStore.xml</prop>
                </props>
                <props>
                    <prop key="path">/${alfresco_user_store.system_container.childname}</prop>
                    <prop key="location">alfresco/bootstrap/alfrescoAuthorityStorePermission.xml</prop>
                </props>
                <props>
                    <prop key="path">/${alfresco_user_store.system_container.childname}/sys:authorities</prop>
                    <prop key="location">alfresco/bootstrap/emailServer.xml</prop>
                </props>
            </list>
        </property>
    </bean>

    <bean id="systemBootstrap" parent="systemStoreImporter" singleton="true">
        <property name="bootstrapViews">
            <list>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/descriptor.xml</prop>
                </props>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/systemRegistry.xml</prop>
                </props>
            </list>
        </property>
    </bean>

    <bean id="versionBootstrap" parent="versionStoreImporter" singleton="false">
        <property name="bootstrapViews">
            <list>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/lightWeightVersionStore.xml</prop>
                </props>
            </list>
        </property>
    </bean>
    
    <bean id="version2Bootstrap" parent="version2StoreImporter" singleton="false">
        <property name="bootstrapViews">
            <list>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/version2Store.xml</prop>
                </props>
            </list>
        </property>
    </bean>

    <bean id="spacesArchiveBootstrap" parent="spacesArchiveStoreImporter" singleton="false">
        <property name="bootstrapViews">
            <list>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/spacesArchive.xml</prop>
                </props>
            </list>
        </property>
    </bean>

    <bean id="spacesModelsBootstrap" parent="storeImporter" singleton="false">
    	<!-- NOOP for fresh bootstrap (will skip store creation) - provides ordering when performing a repo restore (bootstrap import) -->
    </bean>
    
    <bean id="spacesBootstrap" parent="spacesStoreImporter" singleton="false">
        <property name="bootstrapViews">
            <list>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/spaces.xml</prop>
                    <prop key="messages">alfresco/messages/bootstrap-spaces</prop>
                </props>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/system.xml</prop>
                </props>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/categories.xml</prop>
                </props>
                <props>
                    <prop key="path">/</prop>
                    <prop key="location">alfresco/bootstrap/multilingualRoot.xml</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}/${spaces.templates.childname}</prop>
                    <prop key="location">alfresco/templates/software_engineering_project.xml</prop>
                    <prop key="messages">alfresco/messages/bootstrap-templates</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}/${spaces.templates.content.childname}</prop>
                    <prop key="location">alfresco/templates/content_template_examples.xml</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}/${spaces.templates.content.childname}</prop>
                    <prop key="location">alfresco/templates/readme_template.xml</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}/${spaces.templates.email.childname}</prop>
                    <prop key="location">alfresco/templates/email_templates.acp</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}/${spaces.templates.rss.childname}</prop>
                    <prop key="location">alfresco/templates/rss_templates.acp</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}/${spaces.scripts.childname}</prop>
                    <prop key="location">alfresco/bootstrap/example_javascripts.acp</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/webScripts.xml</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/webScriptsExtensions.xml</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/webScriptsReadme.xml</prop>
                </props>

                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/customModelsSpace.acp</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/customMessagesSpace.xml</prop>
                </props>
                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/customWebClientExtensionSpace.xml</prop>
                </props>

                <props>
                    <prop key="path">/${spaces.company_home.childname}/${spaces.dictionary.childname}</prop>
                    <prop key="location">alfresco/bootstrap/customWorkflowDefsSpace.acp</prop>
                </props>
                
                <props>
                    <prop key="path">/cm:categoryRoot</prop>
                    <prop key="location">alfresco/bootstrap/tagRootCategory.xml</prop>
                </props>

                <props>
                    <prop key="path">/${spaces.company_home.childname}</prop>
                    <prop key="location">alfresco/bootstrap/sitesSpace.xml</prop>
                    <prop key="messages">alfresco/messages/bootstrap-spaces</prop>
                </props>
            </list>
        </property>
    </bean>
    
    <bean id="siteAVMBootstrap" class="org.alfresco.repo.site.SiteAVMBootstrap">
        <property name="avmService" ref="AVMService" />
        <property name="permissionService" ref="PermissionService" />
        <property name="storename">
            <value>sitestore</value>
        </property>
        <property name="rootdir">
            <value>alfresco</value>
        </property>
    </bean>

    <bean id="multiTenantBootstrap" class="org.alfresco.repo.tenant.MultiTenantBootstrap" >
        <property name="tenantAdminService" ref="tenantAdminService" />
    </bean>

    <bean id="workflowBootstrap" parent="workflowDeployer">
        <property name="workflowDefinitions">
            <list>
                <props>
                    <prop key="engineId">jbpm</prop>
                    <prop key="location">alfresco/workflow/review_processdefinition.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
                <props>
                    <prop key="engineId">jbpm</prop>
                    <prop key="location">alfresco/workflow/adhoc_processdefinition.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
               <props>
               <!-- WCM workflow definition -->
                    <prop key="engineId">jbpm</prop>
                    <prop key="location">alfresco/workflow/submit_processdefinition.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
               </props>
            <props>
               <!-- WCM workflow definition -->
               <prop key="engineId">jbpm</prop>
               <prop key="location">alfresco/workflow/changerequest_processdefinition.xml</prop>
               <prop key="mimetype">text/xml</prop>
               <prop key="redeploy">false</prop>
            </props>
            </list>
        </property>
        <property name="models">
            <list>
               <value>alfresco/workflow/workflowModel.xml</value>
               <value>alfresco/workflow/wcmWorkflowModel.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
               <value>alfresco/workflow/workflow-messages</value>
               <value>alfresco/workflow/wcm-workflow-messages</value>
            </list>
        </property>
        <property name="repositoryWorkflowDefsLocations" ref="customWorkflowDefsRepositoryLocation"/>
    </bean>

    <!-- Bootstrap any extensions -->

    <import resource="classpath*:alfresco/extension/bootstrap/*-context.xml" />

    <!-- Perform index recovery before applying any patches -->
    <!-- rebuild the index if required - before we check that it is there -->
    
    <bean id="indexRecoveryBootstrap" class="org.alfresco.repo.node.index.IndexRecoveryBootstrapBean" >
       <property name="indexRecoveryComponent">
           <ref bean="indexRecoveryComponent"/>
       </property>
    </bean>
    
    <bean id="avmIndexRecoveryBootstrap" class="org.alfresco.repo.node.index.IndexRecoveryBootstrapBean" >
       <property name="indexRecoveryComponent">
          <ref bean="avmIndexRecoveryComponent"/>
       </property>
    </bean>

   <bean id="personDaoBootstrap" class="org.alfresco.repo.security.person.PersonDaoBootstrap" >
      <property name="personDaoImpl">
         <ref bean="personDaoImpl"/>
      </property>
   </bean>

    <!-- Descriptor Service -->
    <bean id="descriptorComponent" class="org.alfresco.repo.descriptor.DescriptorServiceImpl">
       <property name="serverDescriptorDAO">
           <ref bean="serverDescriptorDAO"/>
       </property>
       <property name="currentRepoDescriptorDAO">
           <ref bean="currentRepoDescriptorDAO"/>
       </property>
       <property name="installedRepoDescriptorDAO">
           <ref bean="installedRepoDescriptorDAO"/>
       </property>
       <property name="transactionService">
           <ref bean="transactionService"/>
       </property>
    </bean>

    <bean id="serverDescriptorDAO" class="org.alfresco.repo.descriptor.ServerDescriptorDAOImpl">
       <property name="repositoryName">
           <value>${repository.name}</value>
       </property>
       <property name="resource">
           <value>classpath:alfresco/version.properties</value>
       </property>
    </bean>

    <bean id="currentRepoDescriptorDAO" class="org.alfresco.repo.descriptor.RepositoryDescriptorDAOImpl">
       <property name="name">
           <value>system.descriptor.current.childname</value>
       </property>
       <property name="systemBootstrap">
           <ref bean="systemBootstrap"/>
       </property>
       <property name="transactionService">
           <ref bean="transactionService"/>
       </property>
       <property name="namespaceService">
           <ref bean="namespaceService"/>
       </property>
       <property name="nodeService">
           <ref bean="nodeService"/>
       </property>
       <property name="contentService">
           <ref bean="contentService"/>
       </property>
       <property name="searchService">
           <ref bean="searchService"/>
       </property>
    </bean>

    <bean id="installedRepoDescriptorDAO" class="org.alfresco.repo.descriptor.RepositoryDescriptorDAOImpl">
       <property name="name">
           <value>system.descriptor.childname</value>
       </property>
       <property name="systemBootstrap">
           <ref bean="systemBootstrap"/>
       </property>
       <property name="transactionService">
           <ref bean="transactionService"/>
       </property>
       <property name="namespaceService">
           <ref bean="namespaceService"/>
       </property>
       <property name="nodeService">
           <ref bean="nodeService"/>
       </property>
       <property name="contentService">
           <ref bean="contentService"/>
       </property>
       <property name="searchService">
           <ref bean="searchService"/>
       </property>
    </bean>


    <!-- This component checks the interconnection between the metadata, indexes and content -->
    <bean id="configurationChecker" class="org.alfresco.repo.admin.ConfigurationChecker">
       <property name="strict">
           <value>${system.bootstrap.config_check.strict}</value>
       </property>
       <property name="dirRoot">
           <value>${dir.root}</value>
       </property>
       <property name="indexRecoveryMode">
           <value>${index.recovery.mode}</value>
       </property>
       <!-- helper beans -->
       <property name="transactionService">
           <ref bean="transactionService"/>
       </property>
       <property name="systemBootstrap">
           <ref bean="systemBootstrap"/>
       </property>
       <property name="namespaceService">
           <ref bean="namespaceService"/>
       </property>
       <property name="nodeService">
           <ref bean="nodeService"/>
       </property>
       <property name="searchService">
           <ref bean="searchService"/>
       </property>
       <property name="contentService">
           <ref bean="contentService"/>
       </property>
    </bean>


    <!-- This component ensures that patches get applied on startup -->

    <bean id="patchExecuter" class="org.alfresco.repo.admin.patch.PatchExecuter">
        <property name="transactionService">
            <ref bean="transactionService" />
        </property>
        <property name="patchService">
            <ref bean="PatchService" />
        </property>
    </bean>

    <!-- Import other Alfresco bootstrap components -->
    <import resource="classpath*:alfresco/alfresco-*-bootstrap-context.xml" />

    <!-- Start module components -->

    <bean id="moduleStarter" class="org.alfresco.repo.module.ModuleStarter">
        <property name="moduleService">
            <ref bean="ModuleService" />
        </property>
    </bean>

    <!-- CIFS Server -->

    <bean id="fileServerConfiguration" class="org.alfresco.filesys.ServerConfigurationBean" parent="fileServerConfigurationBase">
       <property name="configService">
           <ref bean="fileServersConfigService"/>
       </property>
    </bean>

    <bean id="cifsServer" class="org.alfresco.filesys.CIFSServerBean" destroy-method="stopServer">
        <constructor-arg>
           <ref local="fileServerConfiguration"/>
        </constructor-arg>
    </bean>

    <!-- FTP Server -->

    <bean id="ftpServer" class="org.alfresco.filesys.FTPServerBean" destroy-method="stopServer">
        <constructor-arg>
           <ref local="fileServerConfiguration"/>
        </constructor-arg>
    </bean>

    <!-- NFS Server -->

    <bean id="nfsServer" class="org.alfresco.filesys.NFSServerBean" destroy-method="stopServer">
        <constructor-arg>
           <ref local="fileServerConfiguration"/>
        </constructor-arg>
    </bean>

    <bean id="personDaoBootstrap" class="org.alfresco.repo.security.person.PersonDaoBootstrap" >
        <property name="personDaoImpl">
         	<ref bean="personDaoImpl"/>
      	</property>
   	</bean>
   
    <!-- Start the quartz scheduler -->

    <bean id="schedulerStarter" class="org.alfresco.util.SchedulerStarterBean" >
       <property name="scheduler">
           <ref bean="schedulerFactory"/>
       </property>
    </bean>

    <bean id="openOfficeConnectionTester" class="org.alfresco.util.OpenOfficeConnectionTester" >
        <property name="connection">
            <ref bean="openOfficeConnection" />
        </property>
        <property name="strict">
            <value>false</value>
        </property>
    </bean>

    <!-- Workflow Scheduler -->
    <bean id="workflowScheduler" class="org.alfresco.repo.workflow.jbpm.JBPMScheduler">
       <property name="JBPMTemplate" ref="jbpm_template" />
    </bean>

    <!-- Email Server -->
    <bean id="emailServer" class="org.alfresco.email.server.impl.subetha.SubethaEmailServer">
        <property name="enabled">
            <value>${email.server.enabled}</value>
        </property>
        <property name="domain">
            <value>${email.server.domain}</value>
        </property>
        <property name="port">
            <value>${email.server.port}</value>
        </property>
        <property name="blockedSenders">
            <value>${email.server.blocked.senders}</value>
        </property>
        <property name="allowedSenders">
            <value>${email.server.allowed.senders}</value>
        </property>
        <property name="emailService">
            <ref bean="EmailService" />
        </property>
    </bean>

	<!-- Repository helper class -->
   <bean id="repositoryHelper" class="org.alfresco.repo.model.Repository">
      <property name="transactionHelper" ref="retryingTransactionHelper" />
      <property name="namespaceService" ref="namespaceService" />
      <property name="nodeService" ref="nodeService" />
      <property name="personService" ref="personService" />
      <property name="fileFolderService" ref="fileFolderService" />
      <property name="searchService" ref="searchService" />
      <property name="tenantAdminService" ref="tenantAdminService" />
      <property name="avmService" ref="AVMService" />
      <property name="companyHomeStore"><value>${spaces.store}</value></property>
      <property name="companyHomePath"><value>/${spaces.company_home.childname}</value></property>
   </bean>

    <!-- Startup Message -->

    <bean id="startupLog" class="org.alfresco.repo.descriptor.DescriptorStartupLog">
       <property name="descriptorService">
           <ref local="descriptorComponent"/>
       </property>
       <property name="tenantService">
           <ref bean="tenantService"/>
       </property>
    </bean>
   
</beans>
