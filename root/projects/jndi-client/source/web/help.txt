Help For The Really Bad Demo.
-----------------------------

Basic Syntax: 
Enter commands into the Command box of the form:

    command, arg1, arg2, arg3, ... argn

Enter further data into the Optional Data box for
command like write, create that require input data.

Click Execute to run the command.

Individual Commands:

ls - Lists the contents of the given directory.

ls, avmpath, #versionnumber#

avmpath is a valid avm path which are of the form:

  storename:/name/name/name.../name
  
  The root of the store is simply
  storename:/
  
#versionnumber# is an integer constant indicating 
the version number. -1 is used to reference the 'HEAD'
version.

------

lsr - Lists the contents of the given directory recursively.

lsr, avmpath, #versionnumber#

avmpath and #versionnumber# as above.

------

lsrep - Lists all the avmstores.

lsrep

------

lsver - Lists the versions in a given store.

lsver, storename

storename is the name of the store (alphanumeric).

------

mkrep - Create a new store.

mkrep, storename

storename as above.

------

load - Loads content recursively into an avm directory.

load, fspath, avmpath

fspath is a local filesystem path.  Use '/'s to
be save, even on windows.
avmpath as above and must be a path to a directory.

------

mkdir - Create a new directory

mkdir, avmpath, name

avmpath is as above and must point to a directory.
name must be a valid Alfresco path component name.

------

mkbr - Create a branch

mkbr, srcavmpath, dstavmpath, name, #versionnumber#

srcavmpath is a valid avmpath
dstavmpath is a valid avmpath to a directory
name is a valid path component name.

------

mkldir - Create a new layered directory

mkldir, targetavmpath, avmpath, name

targetavmpath is a valid avmpath to a directory which
  will be what the new layered directory is transparent to.
avmpath is and avmpath to the directory which will contain
  the new layered directory.
name is a valid path component name.

------

rename - Renames a node from one place to another.

rename, srcdiravmpath, srcname, dstdiravmpath, dstname

srcdiravmpath is the avm directory that contains the node
  to be renamed.
srcname is the name of the node to rename.
dstdiravmpath is the avm directory that the renamed
  node will live in.
dstname is the name of the renamed node.

------

cp - Copies a file from one place to another.

cp, avmpath, #versionnumber#, diravmpath, name

avmpath is the path to the file to copy.
#versionnumber# is as above.
diravmpath is the directory in which the copy will
reside.
name is the name of the copy.

------

snap - Creates a snapshot (a new version of an
avmstore).

snap, storename

storename is the name of the store to snapshot.

------

cat - Shows the textual content of a node. Sorry no binary 
viewing.

cat, avmpath, #versionnumber#

avmpath as above.
#versionnumber# as above.

------

rm - Remove a node.

rm, avmpath, name

avmpath is a pointer to a directory.
name is the name of the node in that directory
to remove.

------

rmrep - Purges a store, i.e. makes it truly go away.

rmrep, name

name is the name of the store to purge.

------

rmver - Purges a particular version of a store.

rmver, name, #versionnumber#

name is the name of the store.

#versionnmber# is the version to purge.

------

write - Writes content to an existing file.

write, avmpath

avmpath is a path to a file.

This command expects the content to be written in
the Optional Data box.

------

create - Create a new file.

create, avmpath, name

avmpath is a path to a directory.
name is the name to give the new file.

This command expects the content to be written in 
the Optional Data box.

------

stat - Get information on a node.

stat, avmpath, #versionnumber#

avmpath as above.

#versionnumber# as above.

------

history - Get a list of the previous versions
of a node.

history, avmpath, #versionnumber#, #count#

avmpath as above.
#versionnumber# as above.
#count# The number of versions into the past to list.
-1 means all.

------

statstore - Show information about a store.

statstore, storename

storename The name of the store.

------

compare - Compares two trees.

compare, avmpath, #versionnumber#, avmpath, #versionnumber#

------

update - Promotes a node from one tree to another.

update, avmpath, #versionnumber#, avmpath

------

resetLayer - Resets a layer.

resetLayer, avmpath

______

flatten - Flattens a layer against a target tree.

flatten, avmpath, avmpath
