<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING/DTD BEAN//EN"
   "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!-- load common properties -->
    <bean id="virtserver-properties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

        <!--
        <property name="ignoreUnresolvablePlaceholders">
            <value>true</value>
        </property>
        -->

        <property name="locations">
            <list>
                <value>file:${catalina.base}/conf/alfresco-shared.properties</value>
                <value>file:${catalina.base}/conf/alfresco-virtserver.properties</value>
            </list>
        </property>
    </bean>

   <!-- Client Ticket Holder. -->
   <bean id="clientTicketHolder" class="org.alfresco.repo.remote.ClientTicketHolderGlobal"/>

    <!-- The remote authentication service. -->
    <bean id="authenticationService" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl">
            <value>rmi://${avm.remote.host}:${avm.remote.port}/authentication</value>
        </property>
        <property name="serviceInterface">
            <value>org.alfresco.service.cmr.security.AuthenticationService</value>
        </property>
        <property name="refreshStubOnConnectFailure">
            <value>true</value>
        </property>
    </bean>

   <!-- Advice for automatic reauthentication. -->
    <bean id="reauthenticatingAdvice" class="org.alfresco.repo.remote.ReauthenticatingAdvice">
        <property name="authenticationService">
            <ref bean="authenticationService"/>
        </property>
        <property name="clientTicketHolder">
            <ref bean="clientTicketHolder"/>
        </property>
        <property name="user">
            <value>${alfresco.server.user}</value>
        </property>
        <property name="password">
            <value>${alfresco.server.password}</value>
        </property>
        <property name="retryInterval">
            <value>${alfresco.virtserver.connection.retry.interval}</value>
        </property>
    </bean>

    <bean id="avmReauthenticatingAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice">
            <ref bean="reauthenticatingAdvice"/>
        </property>
        <property name="pointcut">
            <bean class="org.springframework.aop.TruePointcut"/>
        </property>
    </bean>

    <bean id="avmRemoteTransport" class="org.springframework.aop.framework.ProxyFactoryBean">
       <property name="proxyInterfaces">
           <list>
               <value>org.alfresco.service.cmr.remote.AVMRemoteTransport</value>
           </list>
       </property>
        <property name="target">
            <ref bean="avmRemoteTransportRaw"/>
        </property>
        <property name="interceptorNames">
            <list>
                <value>avmReauthenticatingAdvisor</value>
            </list>
        </property>
    </bean>
    
    <!-- Remote Alfresco RMI Proxy bean -->
    <bean id="avmRemote" class="org.alfresco.repo.remote.AVMRemoteImpl">
        <property name="avmRemoteTransport">
            <ref bean="avmRemoteTransport"/>
        </property>
        <property name="clientTicketHolder">
            <ref bean="clientTicketHolder"/>
        </property>
    </bean>

    <!-- The underlying transport. -->
    <bean id="avmRemoteTransportRaw" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl">
            <value>rmi://${avm.remote.host}:${avm.remote.port}/avm</value>
        </property>

        <property name="serviceInterface">
            <value>org.alfresco.service.cmr.remote.AVMRemoteTransport</value>
        </property>

        <property name="refreshStubOnConnectFailure">
            <value>true</value>
        </property>
    </bean>

    <!-- The AttributeService -->
   <bean id="attributeService" class="org.alfresco.repo.remote.AttributeServiceRemote">
       <property name="attributeServiceTransport">
           <ref bean="attributeServiceTransport"/>
       </property>
       <property name="clientTicketHolder">
           <ref bean="clientTicketHolder"/>
       </property>
   </bean>



    <!-- LinkValidationService -->

    <bean id="MockRetryTransactionAdvice"
          class="org.alfresco.linkvalidation.MockRetryTransactionAdvice"/>

    <!-- Read transaction advisor for link validation service. -->
    <bean id="linkValidationServiceReadTxnAdvisor" 
          class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">

        <property name="advice">

            <!-- To simplify testing, retryingTxtAdvice will be skipped here; -->
            <!-- however, it will be present in the webapp's Spring config -->
            <!-- <ref bean="retryingReadTxnAdvice"/> -->
            <ref bean="MockRetryTransactionAdvice"/>

        </property>

        <property name="mappedNames">
            <list>
                <value>getBrokenHrefConcordance</value>
                <value>getHrefConcordance</value>

                <value>getBrokenHrefManifest</value>
                <value>getHrefManifest</value>
            </list>
        </property>
    </bean>
    
    <!-- Write transaction advisor for link validation service. -->
    <bean id="linkValidationServiceWriteTxnAdvisor" 
          class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">

        <!-- To simplify testing, retryingWriteTxtAdvice will be skipped here; -->
        <!-- however, it will be present in the webapp's Spring config -->
        <property name="advice">

            <!-- To simplify testing, retryingTxtAdvice will be skipped here; -->
            <!-- however, it will be present in the webapp's Spring config -->
            <!-- <ref bean="retryingWriteTxnAdvice"/>  -->
            <ref bean="MockRetryTransactionAdvice"/>
        </property>

        <property name="mappedNames">
            <list>
                <value>updateHrefInfo</value>
            </list>
        </property>
    </bean>

    <!-- Create a fake virt server registry object that the test code  -->
    <!-- can query for information and use to tell the virt server     -->
    <!-- that it's time to bring an archived version on/off line       -->
    <bean id="VirtServerRegistry" 
          class="org.alfresco.mbeans.VirtServerRegistry"
          init-method="initialize" >

        <!-- Authentication info to contact remote virtualization server  -->
        <!-- NOTE:                                                        -->
        <!--    On the machine hosting the virtualization server,         -->
        <!--    $VIRTUAL_TOMCAT_HOME/conf/alfresco-jmxrmi.password and    -->
        <!--    $VIRTUAL_TOMCAT_HOME/conf/alfresco-jmxrmi.access          -->
        <!--    should have the same data as the corresponding files      -->
        <!--    contained here within the Alfresco webapp server.         -->
        <!--    By default, they do; however, if you change the password  -->
        <!--    file on one server, be sure to change it on the other.    -->
        <!--                                                              -->
        <!-- WARNING:                                                     -->
        <!--    For security, be certain that *only* the uid under which  -->
        <!--    the servers run have read access to the password files    -->
        <!--    (e.g.:  under Unix, chmod them to "400").                 -->
        <!--                                                              -->
        <!--                                                              -->
        <!-- For testing, just hard-coding ${alfresco.jmx.dir}            -->
        <!-- to ../repository/config/alfresco                             -->

        <property name="passwordFile" 
                  value="../repository/config/alfresco/alfresco-jmxrmi.password"/>

        <property name="accessFile"   
                  value="../repository/config/alfresco/alfresco-jmxrmi.access"/>
    </bean>

    <bean id="linkValidationServiceExcludeExtensionMatcher" 
          class="org.alfresco.repo.avm.util.FileExtensionNameMatcher">
        <property name="extensions">
            <list>
                <value>.o</value>
                <value>.bak</value>
                <value>.tmp</value>
                <value>.swp</value>
                <value>~</value>
            </list>
        </property>
    </bean>


    <bean id="hrefBearingRequestPathNameMatcher" 
          class="org.alfresco.repo.avm.util.HrefBearingRequestPathNameMatcher">
        <property name="extensions">
            <list>
                <!--   
                  See also: http://filext.com/alphalist.php
                      and:  HrefBearingRequestPathNameMatcher

                 Note:  HrefBearingRequestPathNameMatcher does not require
                        a leading '.'  (unlike FileExtensionNameMatcher),
                        nor does it suffer from performance problems when 
                        the number of extensions is large.  However, it 
                        will not tolerate extensions with internal "." chars; 
                        everything up to and including the final "." will
                        simply be ignored.  Matching is not case sensitive.
                 -->

                <value></value>         <!-- null extension for dirs -->
                <value>ahtml</value>
                <value>ahtm</value>
                <value>asphtml</value>
                <value>asp</value>
                <value>axs</value>
                <value>bhtml</value>
                <value>dci</value>
                <value>dht</value>
                <value>dochtml</value>
                <value>docmhtml</value>
                <value>ehtml</value>
                <value>ephtml</value>
                <value>fhtml</value>
                <value>fphtml</value>
                <value>hhtml</value>
                <value>ht3</value>
                <value>htc</value>
                <value>htmls</value>
                <value>html</value>
                <value>htm</value>
                <value>ihtml</value>
                <value>jcs</value>
                <value>jhtml</value>
                <value>jhtm</value>
                <value>jsp</value>
                <value>log</value>
                <value>mdhtml</value>
                <value>mhtml</value>
                <value>mhtm</value>
                <value>mht</value>
                <value>mml</value>
                <value>php2</value>
                <value>php3</value>
                <value>php4</value>
                <value>php5</value>
                <value>php6</value>
                <value>php7</value>
                <value>php8</value>
                <value>php9</value>
                <value>php</value>
                <value>phtml</value>
                <value>phtml</value>
                <value>phtm</value>
                <value>pht</value>
                <value>pl</value>
                <value>ppthtml</value>
                <value>pptm</value>
                <value>pt</value>
                <value>pubhtml</value>
                <value>pubmhtml</value>
                <value>rbx</value>
                <value>rhtml</value>
                <value>rmh</value>
                <value>s1h</value>
                <value>shtml3</value>
                <value>shtml</value>
                <value>shtm</value>
                <value>sht</value>
                <value>ssi</value>
                <value>stml</value>
                <value>stm</value>
                <value>thtml</value>
                <value>txt</value>
                <value>whtek</value>
                <value>xhtml</value>
                <value>xhtml</value>
                <value>xhtm</value>
                <value>xhtm</value>
                <value>xht</value>
                <value>xlshtml</value>
                <value>xlshtm</value>
                <value>xlsmhtml</value>
                <value>xml</value>
                <value>xtml</value>
                <value>ybhtm</value>
                <!-- add any others here -->
            </list>
        </property>
    </bean>


    <bean id="linkValidationService" 
          class="org.alfresco.linkvalidation.LinkValidationServiceImpl">
        <property name="attributeService">
            <ref bean="attributeService"/>
        </property>
        <property name="avmRemote">
            <ref bean="avmRemote"/>
        </property>
        <property name="virtServerRegistry">
            <ref bean="VirtServerRegistry"/>
        </property>
        <property name="AVMSyncService">
            <ref bean="avmSyncService"/>
        </property>
        <property name="excludeMatcher">
            <ref bean="linkValidationServiceExcludeExtensionMatcher"/>
        </property>
        <property name="hrefBearingRequestPathMatcher">
            <ref bean="hrefBearingRequestPathNameMatcher"/>
        </property>
    </bean>

    <bean id="LinkValidationService" 
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>org.alfresco.linkvalidation.LinkValidationService</value>
            </list>
        </property>
        <property name="targetName">
            <value>linkValidationService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>linkValidationServiceWriteTxnAdvisor</value>
                <value>linkValidationServiceReadTxnAdvisor</value>
            </list>
        </property>
    </bean>





    <!-- Wrapped AttributeService Transport -->
    <bean id="attributeServiceTransport" class="org.springframework.aop.framework.ProxyFactoryBean">
       <property name="proxyInterfaces">
           <list>
               <value>org.alfresco.service.cmr.remote.AttributeServiceTransport</value>
           </list>
       </property>
        <property name="target">
            <ref bean="attributeServiceTransportRaw"/>
        </property>
        <property name="interceptorNames">
            <list>
                <value>avmReauthenticatingAdvisor</value>
            </list>
        </property>
    </bean>
    
    <!-- The underlying transport for AttributeService -->
    <bean id="attributeServiceTransportRaw" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl">
            <value>rmi://${avm.remote.host}:${avm.remote.port}/attributes</value>
        </property>
        <property name="serviceInterface">
            <value>org.alfresco.service.cmr.remote.AttributeServiceTransport</value>
        </property>
        <property name="refreshStubOnConnectFailure">
            <value>true</value>
        </property>
    </bean>



    <!-- SyncService -->
    <bean id="avmSyncService" class="org.alfresco.repo.remote.AVMSyncServiceRemote">
        <property name="avmSyncServiceTransport">
            <ref bean="avmSyncServiceTransport"/>
        </property>
        <property name="clientTicketHolder">
            <ref bean="clientTicketHolder"/>
        </property>
    </bean>

    <bean id="avmSyncServiceTransport" class="org.springframework.aop.framework.ProxyFactoryBean">
       <property name="proxyInterfaces">
           <list>
               <value>org.alfresco.service.cmr.remote.AVMSyncServiceTransport</value>
           </list>
       </property>
        <property name="target">
            <ref bean="avmSyncServiceTransportRaw"/>
        </property>
        <property name="interceptorNames">
            <list>
                <value>avmReauthenticatingAdvisor</value>
            </list>
        </property>
    </bean>
    
    <!-- The underlying transport for SyncService -->
    <bean id="avmSyncServiceTransportRaw" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl">
            <value>rmi://${avm.remote.host}:${avm.remote.port}/avmsync</value>
        </property>
        <property name="serviceInterface">
            <value>org.alfresco.service.cmr.remote.AVMSyncServiceTransport</value>
        </property>
        <property name="refreshStubOnConnectFailure">
            <value>true</value>
        </property>
    </bean>
   



    <!-- The JNDI info bean for jndi-client specific property access -->
    <bean id="jndiInfoBean" class="org.alfresco.jndi.JndiInfoBean">
       <property name="alfrescoServerUser">
           <value>${alfresco.server.user}</value>
       </property>
       <property name="alfrescoServerPassword">
          <value>${alfresco.server.password}</value>
        </property>
    </bean>


    <!-- Info for peer/peer MBean registration with remote Alfresco server -->
    <bean id="virtServerInfo"
          class="org.alfresco.mbeans.VirtServerInfo"
          lazy-init="true">

        <!-- local virtualization server domain                      -->
        <!-- Note: the actual virtualization server hostname used    -->
        <!--       in URLs created by the Alfreseco webapp will      -->
        <!--       be:    ${alfresco.virtserver.domain}              -->
        <!--                                                         -->
        <!-- Note:  When multiple virt servers are supported,        -->
        <!--        this property will need to be more elaborate.    -->
        <!--        One way this could be handled is to pass         -->
        <!--        a reference to an object that creates a url      -->
        <!--        from an avm file name, and let *that* be the     -->
        <!--        central point of the file/url mapping.           -->
        <!--        Another technique would be to alwasy create urls -->
        <!--        to a servlet that does the appropriate redirect  -->
        <!--        dynamically (this is the most general approach). -->

        <property name="virtServerDomain">
            <value>${alfresco.virtserver.domain}</value>
        </property>

        <!-- local virtualization server HTTP port  -->
        <property name="virtServerHttpPort">
            <value>${alfresco.virtserver.http.port}</value>
        </property>

        <!-- local virtualization server JMX RMI port  -->
        <property name="virtServerJmxRmiPort">
            <value>${alfresco.virtserver.jmxrmi.port}</value>
        </property>


        <!-- local CIFS automount props -->
        <property name="virtServerCifsAvmVersionTreeWin">
            <value>${alfresco.virtserver.cifs.avm.versiontree.win}</value>
        </property>
        <property name="virtServerCifsAvmVersionTreeWinAutomount">
            <value>${alfresco.virtserver.cifs.avm.versiontree.win.automount}</value>
        </property>
        <property name="virtServerCifsAvmVersionTreeUnix">
            <value>${alfresco.virtserver.cifs.avm.versiontree.unix}</value>
        </property>
        <property name="virtServerCifsAvmVersionTreeUnixAutomount">
            <value>${alfresco.virtserver.cifs.avm.versiontree.unix.automount}</value>
        </property>





        <!-- remote Alfresco server hostname -->
        <property name="alfrescoJmxRmiHost">
            <value>${avm.remote.host}</value>
        </property>

        <!-- remote Alfresco server JMX RMI port -->
        <property name="alfrescoJmxRmiPort">
            <value>${avm.remote.port}</value>
        </property>

        <!-- retry interval when network connections fail (in milliseconds)  -->
        <property name="virtServerConnectionRetryInterval">
            <value>${alfresco.virtserver.connection.retry.interval}</value>
        </property>


    </bean>


</beans>
