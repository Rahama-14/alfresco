Index: .classpath
===================================================================
--- .classpath	(revision 585)
+++ .classpath	(working copy)
@@ -1,9 +1,10 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="core/src/main/java"/>
-	<classpathentry kind="src" path="core/src/test/java"/>
-	<classpathentry kind="src" path="debugger/src/main/java"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
-	<classpathentry kind="con" path="org.maven.ide.eclipse.MAVEN2_CLASSPATH_CONTAINER/modules"/>
-	<classpathentry kind="output" path="target/classes"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="core/src/main/java"/>
+	<classpathentry kind="src" path="core/src/test/java"/>
+	<classpathentry kind="src" path="debugger/src/main/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
+	<classpathentry kind="con" path="org.maven.ide.eclipse.MAVEN2_CLASSPATH_CONTAINER/modules"/>
+	<classpathentry kind="lib" path="/3rd Party/lib/commons/commons-logging-1.0.4.jar"/>
+	<classpathentry kind="output" path="target/classes"/>
+</classpath>
Index: core/src/test/java/net/sf/ehcache/CacheTest.java
===================================================================
--- core/src/test/java/net/sf/ehcache/CacheTest.java	(revision 585)
+++ core/src/test/java/net/sf/ehcache/CacheTest.java	(working copy)
@@ -16,9 +16,9 @@
 
 package net.sf.ehcache;
 
-import edu.emory.mathcs.backport.java.util.concurrent.ExecutionException;
-import edu.emory.mathcs.backport.java.util.concurrent.ExecutorService;
-import edu.emory.mathcs.backport.java.util.concurrent.Future;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Future;
 import net.sf.ehcache.bootstrap.BootstrapCacheLoader;
 import net.sf.ehcache.event.RegisteredEventListeners;
 import net.sf.ehcache.exceptionhandler.ExceptionHandlingDynamicCacheProxy;
Index: core/src/test/java/net/sf/ehcache/jcache/JCacheTest.java
===================================================================
--- core/src/test/java/net/sf/ehcache/jcache/JCacheTest.java	(revision 585)
+++ core/src/test/java/net/sf/ehcache/jcache/JCacheTest.java	(working copy)
@@ -16,7 +16,7 @@
 
 package net.sf.ehcache.jcache;
 
-import edu.emory.mathcs.backport.java.util.concurrent.ExecutionException;
+import java.util.concurrent.ExecutionException;
 import net.sf.ehcache.exceptionhandler.CountingExceptionHandler;
 import net.sf.ehcache.loader.CountingCacheLoader;
 import net.sf.ehcache.loader.ExceptionThrowingLoader;
Index: core/src/main/java/net/sf/ehcache/distribution/MulticastKeepaliveHeartbeatReceiver.java
===================================================================
--- core/src/main/java/net/sf/ehcache/distribution/MulticastKeepaliveHeartbeatReceiver.java	(revision 585)
+++ core/src/main/java/net/sf/ehcache/distribution/MulticastKeepaliveHeartbeatReceiver.java	(working copy)
@@ -31,8 +31,8 @@
 import java.util.StringTokenizer;
 import java.util.List;
 
-import edu.emory.mathcs.backport.java.util.concurrent.ExecutorService;
-import edu.emory.mathcs.backport.java.util.concurrent.Executors;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
 
 /**
  * Receives heartbeats from any {@link MulticastKeepaliveHeartbeatSender}s out there.
Index: core/src/main/java/net/sf/ehcache/distribution/RMISynchronousCacheReplicator.java
===================================================================
--- core/src/main/java/net/sf/ehcache/distribution/RMISynchronousCacheReplicator.java	(revision 585)
+++ core/src/main/java/net/sf/ehcache/distribution/RMISynchronousCacheReplicator.java	(working copy)
@@ -133,7 +133,7 @@
             try {
                 cachePeer.put(element);
             } catch (Throwable t) {
-                throw new RemoteCacheException("Error doing put to remote peer. Message was: " + t.getMessage());
+                throw new RemoteCacheException("Error doing put to remote peer. Message was: " + t.getMessage(), t);
             }
         }
     }
@@ -227,7 +227,7 @@
             try {
                 cachePeer.remove(key);
             } catch (Throwable e) {
-                throw new RemoteCacheException("Error doing remove to remote peer. Message was: " + e.getMessage());
+                throw new RemoteCacheException("Error doing remove to remote peer. Message was: " + e.getMessage(), e);
             }
         }
     }
@@ -297,7 +297,7 @@
             try {
                 cachePeer.removeAll();
             } catch (Throwable e) {
-                throw new RemoteCacheException("Error doing removeAll to remote peer. Message was: " + e.getMessage());
+                throw new RemoteCacheException("Error doing removeAll to remote peer. Message was: " + e.getMessage(), e);
             }
         }
     }
Index: core/src/main/java/net/sf/ehcache/Cache.java
===================================================================
--- core/src/main/java/net/sf/ehcache/Cache.java	(revision 585)
+++ core/src/main/java/net/sf/ehcache/Cache.java	(working copy)
@@ -16,11 +16,11 @@
 
 package net.sf.ehcache;
 
-import edu.emory.mathcs.backport.java.util.concurrent.ExecutionException;
-import edu.emory.mathcs.backport.java.util.concurrent.Future;
-import edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue;
-import edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor;
-import edu.emory.mathcs.backport.java.util.concurrent.TimeUnit;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.Future;
+import java.util.concurrent.LinkedBlockingQueue;
+import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.TimeUnit;
 import net.sf.ehcache.bootstrap.BootstrapCacheLoader;
 import net.sf.ehcache.config.CacheConfiguration;
 import net.sf.ehcache.event.CacheEventListener;
Index: core/src/main/java/net/sf/ehcache/constructs/asynchronous/AsynchronousCommandExecutor.java
===================================================================
--- core/src/main/java/net/sf/ehcache/constructs/asynchronous/AsynchronousCommandExecutor.java	(revision 585)
+++ core/src/main/java/net/sf/ehcache/constructs/asynchronous/AsynchronousCommandExecutor.java	(working copy)
@@ -28,8 +28,8 @@
 import java.util.Date;
 import java.util.Stack;
 
-import edu.emory.mathcs.backport.java.util.Queue;
-import edu.emory.mathcs.backport.java.util.concurrent.ConcurrentLinkedQueue;
+import java.util.Queue;
+import java.util.concurrent.ConcurrentLinkedQueue;
 
 /**
  * Handles the asynchronous execution of commands. This class contains subtle threading interactions and should
