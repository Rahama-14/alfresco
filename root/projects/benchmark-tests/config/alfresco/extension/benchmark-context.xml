<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>
   
    <bean id="auditableAspect" class="org.alfresco.repo.audit.AuditableAspect">
        <property name="nodeService">
            <ref bean="nodeService" />
        </property>
        <property name="policyComponent">
            <ref bean="policyComponent" />
        </property>
        <property name="authenticationService">
            <ref bean="authenticationService" />
        </property>
    </bean>

   <bean id="integrityChecker" class="org.alfresco.repo.node.integrity.IntegrityChecker">
      <property name="policyComponent">
         <ref bean="policyComponent"/>
      </property>
      <property name="dictionaryService">
         <ref bean="dictionaryService" />
      </property>
      <property name="nodeService">
         <ref bean="nodeService" />
      </property>
      <property name="enabled">
         <value>false</value>  <!-- on/off switch -->
      </property>
      <property name="traceOn">
         <value>false</value>  <!-- use only to trace problems -->
      </property>
      <property name="failOnViolation" >
         <value>false</value>  <!-- set to true to generate runtime exceptions upon violation -->
      </property>
      <property name="maxErrorsPerTransaction" >
         <value>5</value>  <!-- limit output (exception and log) to the first N violation messages -->
      </property>
   </bean>

   <bean id="incompleteNodeTagger" class="org.alfresco.repo.node.integrity.IncompleteNodeTagger" >
      <property name="policyComponent">
         <ref bean="policyComponent"/>
      </property>
      <property name="dictionaryService">
         <ref bean="dictionaryService" />
      </property>
      <property name="nodeService">
         <ref bean="nodeService" />
      </property>
   </bean>

   <bean id="actionsAspect" class="org.alfresco.repo.action.ActionsAspect">
      <property name="nodeService">
	     <ref bean="nodeService"/>
	  </property>	   
	  <property name="policyComponent">
	     <ref bean="policyComponent"/>
	  </property>	  	   
	  <property name="ruleService">
	     <ref bean="ruleService"/>
	  </property>
   </bean>   
   <bean id="rulesAspect" class="org.alfresco.repo.rule.RulesAspect">
      <property name="nodeService">
	     <ref bean="nodeService"/>
	  </property>	   
	  <property name="policyComponent">
	     <ref bean="policyComponent"/>
	  </property>	  	   
	  <property name="ruleService">
	     <ref bean="ruleService"/>
	  </property>
   </bean> 
   <bean id="rule-trigger-base" abstract="true">
      <property name="policyComponent">
         <ref bean="policyComponent"/>
      </property>
      <property name="nodeService">
         <ref bean="nodeService"/>
      </property>
      <property name="authenticationComponent">
         <ref bean="authenticationComponent"/>
      </property>
      <property name="dictionaryService">
         <ref bean="dictionaryService"/>
      </property>
   </bean>

   <bean id="permissionServiceImpl" class="org.alfresco.repo.security.permissions.impl.AllowPermissionServiceImpl" >
        <property name="nodeService">
            <ref bean="nodeService" />
        </property>
        <property name="dictionaryService">
            <ref bean="dictionaryService" />
        </property>
        <property name="permissionsDaoComponent">
            <ref bean="permissionsDaoComponent" />
        </property>
        <property name="modelDAO">
            <ref bean="permissionsModelDAO" />
        </property>
        <property name="authenticationComponent">
            <ref bean="authenticationComponentImpl" />
        </property>
        <property name="authorityService">
            <ref bean="authorityService" />
        </property>
        <property name="accessCache">
            <ref bean="permissionsAccessCache" />
        </property>
	    <property name="policyComponent">
            <ref bean="policyComponent" />
        </property>
        <!-- Dynamic authorites are evaluated in the context of a store/node etc -->
        <!-- as opposed to being fixed like user name and groups.                -->
        <!-- There are two dynamic authorities, the ower of a node and the owner -->
        <!-- of a lock on a node.                                                -->
        <property name="dynamicAuthorities">
            <list>
                <ref bean="ownerDynamicAuthority" />
                <ref bean="lockOwnerDynamicAuthority" />
            </list>
        </property>
    </bean>

   <bean id="fileServerConfiguration" class="java.util.ArrayList" />
   <bean id="cifsServer" class="java.util.ArrayList" />
   <bean id="ftpServer" class="java.util.ArrayList" />
   
   <bean id="contentStoreCleanerTrigger" class="java.util.ArrayList" />
   <bean id="indexRecoveryTrigger" class="java.util.ArrayList" />
   <bean id="indexBackupTrigger" class="java.util.ArrayList" />
   <bean id="ehCacheTracerJob" class="java.util.ArrayList" />


</beans>