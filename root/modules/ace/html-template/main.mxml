<?xml version="1.0" encoding="utf-8"?>
<!-- 
/*
 * Copyright (C) 2005-2007 Alfresco Software Limited.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

 * As a special exception to the terms and conditions of version 2.0 of 
 * the GPL, you may redistribute this Program in connection with Free/Libre 
 * and Open Source Software ("FLOSS") applications as described in Alfresco's 
 * FLOSS exception.  You should have recieved a copy of the text describing 
 * the FLOSS exception, and it is also available here: 
 * http://www.alfresco.com/legal/licensing"
 */
 --> 
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
	xmlns:fc="com.flexcapacitor.controls.*"
	xmlns:local="*"
	backgroundColor="#FFFFFF"
	backgroundGradientColors="[#417daf, #ffffff]"
	xmlns:filters="flash.filters.*"
	creationComplete="appLogin()">

	<mx:Script>
	<![CDATA[  
	
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.core.IUIComponent;
			import flash.net.navigateToURL;
			
			private var myList:ArrayCollection;		
			private var myLinks:XMLList;
			private var urls:ArrayCollection;
			
			/**
			 * initializations when application loads
			 * @appLogin
			 */
			 
			private function appLogin():void
			{
				username.setFocus();	
				myframe.visible=false;
			}
			
			/**
			 * handle result event when login is complete
			 * @onLoginComplete
			 * 
			 */
		                
			private function onLoginComplete(event:ResultEvent):void
            {
                myframe.visible=false;
                searchPanel.visible=true;
                loginPanel.visible=false;
                var result:Object = event.result;
				ticketTxt.text=event.result.ticket;
				logTxt.text=username.text;
				signinTxt.text="Logged as "+username.text;
				searchTxt.setFocus();
			}
			
			/**
			 * handle result event when logout is complete
			 * @onLogoutComplete
			 * 
			 */
			
                
			private function onLogoutComplete(event:ResultEvent):void
            {
                searchPanel.visible=false;
                resultArea.visible=false;
                loginPanel.visible=true;
                username.text="";
                password.text="";
                logTxt.text="";
                ticketTxt.text="";
                searchTxt.text="";
                clearAll();
                username.setFocus();
                myframe.visible=false;
                myframe.source='';
                closeBtn.visible=false;
                titleTxt.visible=false;
                resultArea.width=1000;
                searchResults.dataProvider="";    
            }
            
            /**
			 * handle result event when Search is complete
			 * @onSearchComplete
			 * 
			 */
			 
            private function onSearchComplete(event:ResultEvent):void
            {
               resultArea.visible=true;
               searchResults.dataProvider=event.result.feed.entry;
               myList=new ArrayCollection();
               urls=new ArrayCollection();
               myList.removeAll();
               urls.removeAll();
               var i:int;
               clearAll();
               for(i=0;i<event.result.feed.link.length;i++)
               {
               		myList.addItem({href:event.result.feed.link[i].href , rel:event.result.feed.link[i].rel});
               		if(myList[i].rel=="first") fpage.enabled=true;
               		if(myList[i].rel=="previous") ppage.enabled=true;
               		if(myList[i].rel=="next") npage.enabled=true;
					if(myList[i].rel=="last") lpage.enabled=true;
               }
             }
           
            /**
			 * functions for invoking the HTTPServices
			 * @onLogin
			 * @onLogout
			 * @onSearch
			 */
			 
            private function onLogin():void
            {
            	loginService.headers["alf-force-success-status"] = "TRUE";
            	loginService.useProxy=false;
            	loginService.send();
            }
            
            private function onLogout():void
            {	
            	myframe.visible=false;
            	logoutService.send();
            }
            
            private function onSearch():void
            {	
            	searchService.url="http://localhost:8080/alfresco/service/api/search/keyword.atom?q="+searchTxt.text;
            	searchService.send();
            }
            
            /**
			 * functions for paginating
			 * @getUrl - returns the corresponding Urls for pagination
			 * @fpageClick - FirstPage click event
			 * @ppageClick - PreviousPage Click event
			 * @lpageClick - LastPage Click event
			 * @npageClick - NextPage Click event
			 */
			 
            private function getUrl(str:String):String
            {
            	var i:int;
            	var myUrl:String;
            	for(i=0;i<myList.length;i++)
               		if(myList[i].rel==str) myUrl= myList[i].href;
                         
                return myUrl;
            }
            
            private function fpageClick(event:MouseEvent):void
            {
            	fpage.enabled=true;
            	searchService.url= getUrl("first");
            	searchService.send();            	
            }
            
            private function ppageClick(event:MouseEvent):void
            {
            	ppage.enabled=true;
            	searchService.url= getUrl("previous");
            	searchService.send();
            }
            
            private function npageClick(event:MouseEvent):void
            {
            	npage.enabled=true;
            	searchService.url= getUrl("next");
            	searchService.send();
            }
            
            private function lpageClick(event:MouseEvent):void
            {
            	lpage.enabled=true;
            	searchService.url= getUrl("last");
            	searchService.send();
            }
            
            private function clearAll():void
            {
            	fpage.enabled=false;
			    ppage.enabled=false;
				npage.enabled=false;
				lpage.enabled=false;
            }
            
             /**
			 * function for displaying the search content 
			 * from the search list
			 * @resultClick
			 */
			 
            private function resultClick(url:String, title:String):void
            {
            	titleTxt.visible=true;
            	closeBtn.visible=true;
            	titleTxt.text=title;
            	resultArea.width=300;
            	myframe.visible=true;
            	myframe.source=url;            	
            }
	
	
	]]>
	</mx:Script>
		
		<!-- 
			HTTPServices used
				- @loginService 
				- @logoutService
				- @searchService
		-->
		   
	<mx:HTTPService id="loginService"
					method="GET" 
	   	 			result="onLoginComplete(event);" 
	   	 			fault="username.setFocus(); Alert.show(event.fault.faultString, 'Error Log');"
	   				url="http://localhost:8080/alfresco/service/api/login">
    	 <mx:request xmlns="">
        	 <u>{username.text}</u>
         	<pw>{password.text}</pw>
         </mx:request>
    </mx:HTTPService>
   
    <mx:HTTPService id="logoutService"
    				method="POST" 
	   	 			result="onLogoutComplete(event);" 
	   				fault="Alert.show(event.fault.faultString, 'Error Log');"
	   				url="http://localhost:8080/alfresco/service/api/login/ticket/{ticketTxt.text}">
  		  <mx:request xmlns="" >
  		  		<alf_method>DELETE</alf_method>
  		   </mx:request>
  		   
     </mx:HTTPService>
	   
	 <mx:HTTPService id="searchService" 
	   				 method="GET"
	   				 result="onSearchComplete(event);" 
    	 			 fault="Alert.show(event.fault.faultString, 'Error Log');"
    	 			 url="http://localhost:8080/alfresco/service/api/search/keyword.atom?q={searchTxt.text}">
  	 </mx:HTTPService>  
  	 
  	 <!-- loginPanel has the controls for Login -->
		<mx:Panel x="63.5" y="52" id="loginPanel" visible="true" title="Alfresco Login">					
					<mx:Form>
							<mx:FormItem label="User:">
								<mx:TextInput id="username"/>
							</mx:FormItem>						
							<mx:FormItem label="Password:">
								<mx:TextInput id="password" displayAsPassword="true"/>
							</mx:FormItem>
							<mx:FormItem>
								<mx:Button label="Login"   click="onLogin();" id="loginBtn"/>								
							</mx:FormItem>	
							<mx:FormItem>
								<mx:TextInput id="logTxt"  visible="false"/>
							</mx:FormItem>
					</mx:Form>				
		</mx:Panel>
       <!-- @searchPanel has the repeater control for displaying the search results -->
		<mx:Panel   backgroundColor="#FFFFFF" 
					id="searchPanel" height="100%"  width="100%" layout="absolute" visible="false">
				
				<mx:TextInput x="145" y="42" width="281" id="searchTxt"/>
				<mx:Button x="444" y="42" label="Go" width="44" id="SearchBtn" click="onSearch();"/>
				<mx:Button x="909" y="42" label="Logout" click="onLogout();"/>
				<mx:Label x="786" y="44" id="signinTxt"/>
				<mx:Label x="85" y="44" text="Search"/>
		
		<!-- @resultArea is a canvas for holding the search results  -->
		<mx:Canvas id="resultArea"  backgroundColor="#FFFFFF" visible="false" x="85" y="140" width="100%" height="100%"  >
			
		
		<mx:Tile horizontalScrollPolicy="auto"  horizontalGap="10" width="100%" height="100%">            
           
            <mx:Repeater id="searchResults" x="85" y="140" width="100%" height="100%" >                
                <mx:VBox   
                    xmlns:mx="http://www.adobe.com/2006/mxml" 
                     verticalAlign="left" >
                <mx:LinkButton x="85"  id="titleBtn" fontSize="12" label="{searchResults.currentItem.title}" 
                 	click="resultClick(event.currentTarget.getRepeaterItem().link.href,event.currentTarget.getRepeaterItem().title);"
					/>
					
                <mx:HRule left="85"  strokeColor="blue"   width="100%"/>
                <mx:Label text="{searchResults.currentItem.updated} | {searchResults.currentItem.author.name} "/>    
                
                    <mx:LinkButton id="linkBtn" 
                        label="{searchResults.currentItem.summary}" 
                        click="resultClick(event.currentTarget.getRepeaterItem().link.href,event.currentTarget.getRepeaterItem().title);"
                        fontFamily="Timesnewroman" 
                    />    
                             
                </mx:VBox>    
                
            </mx:Repeater>

        </mx:Tile>
        </mx:Canvas>
      
       
        		<mx:Label id="titleTxt" x="430" y="140" visible="true" fontSize="14"/>
      			  <mx:LinkButton id="closeBtn" label="close" 
      			  		 click="myframe.visible=false; myframe.source=''; closeBtn.visible=false; titleTxt.text=''; resultArea.width=1000;"
      			  		 x="1060" y="136" visible="false"  fontSize="12"/>
      		
      		<!-- The HTML component which renders the html contents on to this block -->
      		<!-- This component seems to be having compatibility issues, works fine in mozilla-->	  		 
      		
					<fc:HTML  id="myframe" backgroundColor="#FFFFFF"  
							  borderStyle="solid" 
							  borderThickness="4" 
							  x="430" y="160" 
							  width="674" height="100%"  
							  visible="false"/>
 
				<mx:TextInput id="ticketTxt" visible="false"/>	
				<mx:TextInput id="dummyTxt" visible="false"/>			
				
				<mx:Button x="496" y="42" label="Clear" 
						   click="searchResults.dataProvider=''; 
						   searchTxt.setFocus();
						   myframe.visible=false;
						   myframe.source='';
						   resultArea.visible=false;
						   resultArea.width=1000;
						   titleTxt.text='';
						   closeBtn.visible=false;
						   clearAll();"/>
			
			<!-- the control HBox holds the page navigation controls -->
				<mx:HBox x="85" y="96" width="100%" height="36" backgroundColor="#FFFFFF">
						
						<mx:Label text="Search Results "/>
						<mx:Label text=" Found" width="81"/>
						<mx:Label text="displaying "/>
						<mx:Label text="1"/>
						<mx:Label text="-"/>
						<mx:Label text="10"/>
						<mx:Label id="countTxt" text="123 Results for"/>
						<mx:Label text="Alfresco"/>
					
						<mx:LinkButton id="fpage"   label="First"  toolTip="move first"
                       				   click="fpageClick(event); "  enabled="false"/> 
                        
                        <mx:LinkButton id="ppage"   label="Prev"  toolTip="move previous"
                       				   click="ppageClick(event); " enabled="false"/> 
                       
                        <mx:LinkButton id="npage" 	label="Next" toolTip="move next"
                      				   click="npageClick(event); " enabled="false"/> 
                        
                        <mx:LinkButton id="lpage" 	label="Last"  toolTip="move last"
                        			   click="lpageClick(event); " enabled="false"/> 
                        			   
                 </mx:HBox>
		</mx:Panel>
		
</mx:Application>
